// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTR_NULL, (const byte*)"\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x00" "")
QDEF(MP_QSTR___abs__, (const byte*)"\x95\x07" "__abs__")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x07" "__add__")
QDEF(MP_QSTR___and__, (const byte*)"\x0e\x07" "__and__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x0f" "__build_class__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\x09" "__class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x07" "__del__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x0b" "__delitem__")
QDEF(MP_QSTR___divmod__, (const byte*)"\x78\x0a" "__divmod__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\x09" "__enter__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x06" "__eq__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\x08" "__exit__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x08" "__file__")
QDEF(MP_QSTR___floordiv__, (const byte*)"\x46\x0c" "__floordiv__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x06" "__ge__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x0b" "__getitem__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x06" "__gt__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\x08" "__hash__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x0a" "__import__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\x08" "__init__")
QDEF(MP_QSTR___invert__, (const byte*)"\xf7\x0a" "__invert__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x08" "__isub__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x08" "__iter__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x06" "__le__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\x07" "__len__")
QDEF(MP_QSTR___lshift__, (const byte*)"\x09\x0a" "__lshift__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x06" "__lt__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x08" "__main__")
QDEF(MP_QSTR___mod__, (const byte*)"\x63\x07" "__mod__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x0a" "__module__")
QDEF(MP_QSTR___mul__, (const byte*)"\x31\x07" "__mul__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x08" "__name__")
QDEF(MP_QSTR___neg__, (const byte*)"\x69\x07" "__neg__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x08" "__next__")
QDEF(MP_QSTR___or__, (const byte*)"\x38\x06" "__or__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x08" "__path__")
QDEF(MP_QSTR___pos__, (const byte*)"\x29\x07" "__pos__")
QDEF(MP_QSTR___pow__, (const byte*)"\x2d\x07" "__pow__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x0c" "__qualname__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x01\x0e" "__repl_print__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x08" "__repr__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\x0c" "__reversed__")
QDEF(MP_QSTR___rshift__, (const byte*)"\x57\x0a" "__rshift__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\x07" "__str__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\x0d" "__traceback__")
QDEF(MP_QSTR___truediv__, (const byte*)"\x88\x0b" "__truediv__")
QDEF(MP_QSTR___xor__, (const byte*)"\x20\x07" "__xor__")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\x01" "*")
QDEF(MP_QSTR__, (const byte*)"\xfa\x01" "_")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\x01" "/")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x05" "{:#b}")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\x01" "\x0a")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x08" "<module>")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x07" "<stdin>")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x05" "utf-8")
QDEF(MP_QSTR_ALT_OD, (const byte*)"\x88\x06" "ALT_OD")
QDEF(MP_QSTR_ALT_PP, (const byte*)"\xe3\x06" "ALT_PP")
QDEF(MP_QSTR_ANALOG, (const byte*)"\xaf\x06" "ANALOG")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x05" "ARRAY")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\x0e" "AttributeError")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\x07" "BFINT16")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\x07" "BFINT32")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\x08" "BFUINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\x08" "BFUINT32")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\x07" "BFUINT8")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\x06" "BF_LEN")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x06" "BF_POS")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x0d" "BaseException")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\x07" "BytesIO")
QDEF(MP_QSTR_DEBUG, (const byte*)"\x34\x05" "DEBUG")
QDEF(MP_QSTR_DEEPSLEEP_RESET, (const byte*)"\x14\x0f" "DEEPSLEEP_RESET")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\x08" "DecompIO")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\x08" "EOFError")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x09" "Exception")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x07" "FLOAT64")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x0d" "GeneratorExit")
QDEF(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x0a" "HARD_RESET")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x02" "IN")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x05" "INT16")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x05" "INT32")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x05" "INT64")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\x04" "INT8")
QDEF(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\x0b" "IRQ_FALLING")
QDEF(MP_QSTR_IRQ_RISING, (const byte*)"\x78\x0a" "IRQ_RISING")
QDEF(MP_QSTR_IRQ_RISING_FALLING, (const byte*)"\x60\x12" "IRQ_RISING_FALLING")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x0b" "LookupError")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x0b" "MemoryError")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x06" "NATIVE")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x13" "NotImplementedError")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x07" "OSError")
QDEF(MP_QSTR_OUT_OD, (const byte*)"\x1f\x06" "OUT_OD")
QDEF(MP_QSTR_OUT_PP, (const byte*)"\x34\x06" "OUT_PP")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x0b" "OrderedDict")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\x0d" "OverflowError")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x03" "PTR")
QDEF(MP_QSTR_PULL_DOWN, (const byte*)"\xad\x09" "PULL_DOWN")
QDEF(MP_QSTR_PULL_NONE, (const byte*)"\x55\x09" "PULL_NONE")
QDEF(MP_QSTR_PULL_UP, (const byte*)"\xba\x07" "PULL_UP")
QDEF(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\x0b" "PWRON_RESET")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x03" "Pin")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x07" "PinBase")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\x0c" "RuntimeError")
QDEF(MP_QSTR_SOFT_RESET, (const byte*)"\x01\x0a" "SOFT_RESET")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\x06" "Signal")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x0d" "StopIteration")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x08" "StringIO")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\x0a" "SystemExit")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x09" "TypeError")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x06" "UINT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x06" "UINT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x06" "UINT64")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\x05" "UINT8")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\x0c" "UnicodeError")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\x04" "VOID")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x0a" "ValueError")
QDEF(MP_QSTR_WDT_RESET, (const byte*)"\x08\x09" "WDT_RESET")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x11" "ZeroDivisionError")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0a" "a2b_base64")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x03" "abs")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\x04" "acos")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\x05" "acosh")
QDEF(MP_QSTR_add, (const byte*)"\x44\x03" "add")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\x09" "addressof")
QDEF(MP_QSTR_all, (const byte*)"\x44\x03" "all")
QDEF(MP_QSTR_any, (const byte*)"\x13\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x06" "append")
QDEF(MP_QSTR_args, (const byte*)"\xc2\x04" "args")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\x04" "asin")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x05" "asinh")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x05" "atan2")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x05" "atanh")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x0a" "b2a_base64")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x03" "bin")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x04" "bool")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\x0c" "bound_method")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\x09" "bytearray")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x0c" "bytearray_at")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x08" "bytecode")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\x05" "bytes")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x08" "bytes_at")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x08" "callable")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\x04" "ceil")
QDEF(MP_QSTR_center, (const byte*)"\x4e\x06" "center")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x06" "choice")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\x05" "clear")
QDEF(MP_QSTR_close, (const byte*)"\x33\x05" "close")
QDEF(MP_QSTR_closure, (const byte*)"\x74\x07" "closure")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\x05" "cmath")
QDEF(MP_QSTR_code, (const byte*)"\x68\x04" "code")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x07" "collect")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\x07" "compile")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x07" "complex")
QDEF(MP_QSTR_const, (const byte*)"\xc0\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\x04" "copy")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x03" "cos")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\x04" "cosh")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x05" "count")
QDEF(MP_QSTR_current_tid, (const byte*)"\xca\x0b" "current_tid")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\x0a" "decompress")
QDEF(MP_QSTR_deepsleep, (const byte*)"\x9e\x09" "deepsleep")
QDEF(MP_QSTR_default, (const byte*)"\xce\x07" "default")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x07" "degrees")
QDEF(MP_QSTR_delay, (const byte*)"\x50\x05" "delay")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\x07" "deleter")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\x04" "dict")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\x11" "difference_update")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\x06" "digest")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x03" "dir")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x07" "disable")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x0b" "disable_irq")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x07" "discard")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x06" "divmod")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x03" "doc")
QDEF(MP_QSTR_dump, (const byte*)"\xe9\x04" "dump")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x05" "dumps")
QDEF(MP_QSTR_e, (const byte*)"\xc0\x01" "e")
QDEF(MP_QSTR_elapsed_micros, (const byte*)"\x39\x0e" "elapsed_micros")
QDEF(MP_QSTR_elapsed_millis, (const byte*)"\x8e\x0e" "elapsed_millis")
QDEF(MP_QSTR_enable, (const byte*)"\x04\x06" "enable")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x0a" "enable_irq")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\x08" "endswith")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\x09" "enumerate")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x04" "erfc")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\x04" "exec")
QDEF(MP_QSTR_execfile, (const byte*)"\x58\x08" "execfile")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x03" "exp")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x05" "expm1")
QDEF(MP_QSTR_extend, (const byte*)"\x63\x06" "extend")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x04" "fabs")
QDEF(MP_QSTR_fault_debug, (const byte*)"\x61\x0b" "fault_debug")
QDEF(MP_QSTR_filter, (const byte*)"\x25\x06" "filter")
QDEF(MP_QSTR_find, (const byte*)"\x01\x04" "find")
QDEF(MP_QSTR_float, (const byte*)"\x35\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x05" "floor")
QDEF(MP_QSTR_flush, (const byte*)"\x61\x05" "flush")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x04" "fmod")
QDEF(MP_QSTR_format, (const byte*)"\x26\x06" "format")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x04" "freq")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x05" "frexp")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x0a" "from_bytes")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\x08" "fromkeys")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x09" "frozenset")
QDEF(MP_QSTR_function, (const byte*)"\x27\x08" "function")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x05" "gamma")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x02" "gc")
QDEF(MP_QSTR_generator, (const byte*)"\x96\x09" "generator")
QDEF(MP_QSTR_get, (const byte*)"\x33\x03" "get")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x07" "getattr")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x0b" "getrandbits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\x06" "getter")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\x08" "getvalue")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x07" "globals")
QDEF(MP_QSTR_group, (const byte*)"\xba\x05" "group")
QDEF(MP_QSTR_hard_reset, (const byte*)"\xd0\x0a" "hard_reset")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x04" "hash")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x0b" "heap_unlock")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x07" "heapify")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x07" "heappop")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x08" "heappush")
QDEF(MP_QSTR_help, (const byte*)"\x94\x04" "help")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x03" "hex")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x07" "hexlify")
QDEF(MP_QSTR_id, (const byte*)"\x28\x02" "id")
QDEF(MP_QSTR_idle, (const byte*)"\xa1\x04" "idle")
QDEF(MP_QSTR_imag, (const byte*)"\x47\x04" "imag")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x05" "index")
QDEF(MP_QSTR_info, (const byte*)"\xeb\x04" "info")
QDEF(MP_QSTR_init, (const byte*)"\x1f\x04" "init")
QDEF(MP_QSTR_input, (const byte*)"\x73\x05" "input")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x03" "int")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\x13" "intersection_update")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x06" "invert")
QDEF(MP_QSTR_is_preempt_thread, (const byte*)"\x1a\x11" "is_preempt_thread")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x07" "isdigit")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x0a" "isdisjoint")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x05" "isinf")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x07" "islower")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x05" "isnan")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x0a" "issubclass")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\x0a" "issuperset")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x04" "iter")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\x08" "iterator")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x04" "join")
QDEF(MP_QSTR_kbd_intr, (const byte*)"\xf6\x08" "kbd_intr")
QDEF(MP_QSTR_keepends, (const byte*)"\x62\x08" "keepends")
QDEF(MP_QSTR_key, (const byte*)"\x32\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x04" "keys")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x05" "ldexp")
QDEF(MP_QSTR_len, (const byte*)"\x62\x03" "len")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x06" "lgamma")
QDEF(MP_QSTR_list, (const byte*)"\x27\x04" "list")
QDEF(MP_QSTR_little, (const byte*)"\x89\x06" "little")
QDEF(MP_QSTR_load, (const byte*)"\x63\x04" "load")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\x05" "loads")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\x06" "locals")
QDEF(MP_QSTR_log, (const byte*)"\x21\x03" "log")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x05" "log10")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x04" "log2")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\x06" "lstrip")
QDEF(MP_QSTR_machine, (const byte*)"\x60\x07" "machine")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x03" "map")
QDEF(MP_QSTR_match, (const byte*)"\x96\x05" "match")
QDEF(MP_QSTR_math, (const byte*)"\x35\x04" "math")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x03" "max")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x03" "mem")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x09" "mem_alloc")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x08" "mem_free")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\x08" "mem_info")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x0a" "memoryview")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x0b" "micropython")
QDEF(MP_QSTR_micros, (const byte*)"\xac\x06" "micros")
QDEF(MP_QSTR_millis, (const byte*)"\x5b\x06" "millis")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x03" "min")
QDEF(MP_QSTR_mode, (const byte*)"\x26\x04" "mode")
QDEF(MP_QSTR_modf, (const byte*)"\x25\x04" "modf")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\x07" "modules")
QDEF(MP_QSTR_mount, (const byte*)"\xa8\x05" "mount")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x0a" "namedtuple")
QDEF(MP_QSTR_next, (const byte*)"\x42\x04" "next")
QDEF(MP_QSTR_object, (const byte*)"\x90\x06" "object")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x03" "oct")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x03" "off")
QDEF(MP_QSTR_on, (const byte*)"\x64\x02" "on")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x04" "open")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x09" "opt_level")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x03" "ord")
QDEF(MP_QSTR_partition, (const byte*)"\x87\x09" "partition")
QDEF(MP_QSTR_peektime, (const byte*)"\x8b\x08" "peektime")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\x05" "phase")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x02" "pi")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x03" "pin")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x05" "polar")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x07" "popitem")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\x05" "print")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x08" "property")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x04" "pull")
QDEF(MP_QSTR_push, (const byte*)"\xbb\x04" "push")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x03" "pyb")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x09" "qstr_info")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x07" "radians")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x09" "randrange")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\x04" "read")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x08" "readline")
QDEF(MP_QSTR_real, (const byte*)"\xbf\x04" "real")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\x04" "rect")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x06" "remove")
QDEF(MP_QSTR_repl_info, (const byte*)"\xbf\x09" "repl_info")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\x04" "repr")
QDEF(MP_QSTR_reset, (const byte*)"\x10\x05" "reset")
QDEF(MP_QSTR_reset_cause, (const byte*)"\xce\x0b" "reset_cause")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x07" "reverse")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x08" "reversed")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x06" "rindex")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x05" "round")
QDEF(MP_QSTR_rpartition, (const byte*)"\x15\x0a" "rpartition")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x06" "rstrip")
QDEF(MP_QSTR_rtthread, (const byte*)"\x6d\x08" "rtthread")
QDEF(MP_QSTR_search, (const byte*)"\xab\x06" "search")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x04" "seed")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x04" "seek")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x04" "send")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x03" "set")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\x0a" "setdefault")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x06" "setter")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x06" "sha256")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x03" "sin")
QDEF(MP_QSTR_single, (const byte*)"\x3f\x06" "single")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\x04" "sinh")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x06" "sizeof")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x05" "sleep")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x08" "sleep_us")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\x05" "slice")
QDEF(MP_QSTR_soft_reset, (const byte*)"\xe1\x0a" "soft_reset")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x06" "sorted")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x05" "split")
QDEF(MP_QSTR_splitlines, (const byte*)"\x6a\x0a" "splitlines")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x04" "sqrt")
QDEF(MP_QSTR_stack_use, (const byte*)"\x97\x09" "stack_use")
QDEF(MP_QSTR_stacks_analyze, (const byte*)"\x63\x0e" "stacks_analyze")
QDEF(MP_QSTR_standby, (const byte*)"\xd2\x07" "standby")
QDEF(MP_QSTR_start, (const byte*)"\x85\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\x0a" "startswith")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\x0c" "staticmethod")
QDEF(MP_QSTR_step, (const byte*)"\x57\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x05" "strip")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x06" "struct")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\x05" "super")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x04" "sync")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x03" "tan")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\x04" "tanh")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x05" "throw")
QDEF(MP_QSTR_ticks_add, (const byte*)"\x9d\x09" "ticks_add")
QDEF(MP_QSTR_ticks_cpu, (const byte*)"\x1a\x09" "ticks_cpu")
QDEF(MP_QSTR_ticks_diff, (const byte*)"\xb1\x0a" "ticks_diff")
QDEF(MP_QSTR_ticks_ms, (const byte*)"\x42\x08" "ticks_ms")
QDEF(MP_QSTR_ticks_us, (const byte*)"\x5a\x08" "ticks_us")
QDEF(MP_QSTR_time, (const byte*)"\xf0\x04" "time")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x08" "to_bytes")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x05" "trunc")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x04" "type")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x09" "ubinascii")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x0c" "ucollections")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x07" "uctypes")
QDEF(MP_QSTR_udelay, (const byte*)"\x25\x06" "udelay")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x08" "uhashlib")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x06" "uheapq")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x03" "uio")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x05" "ujson")
QDEF(MP_QSTR_umachine, (const byte*)"\x95\x08" "umachine")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\x09" "unhexlify")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x05" "union")
QDEF(MP_QSTR_unique_id, (const byte*)"\x04\x09" "unique_id")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x05" "upper")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\x07" "urandom")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x03" "ure")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x05" "utime")
QDEF(MP_QSTR_utimeq, (const byte*)"\xf4\x06" "utimeq")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x05" "uzlib")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\x06" "values")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x03" "wfi")
QDEF(MP_QSTR_write, (const byte*)"\x98\x05" "write")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\x03" "zip")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x07" "ustruct")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x0b" "unpack_from")
QDEF(MP_QSTR_exit, (const byte*)"\x85\x04" "exit")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x09" "byteorder")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0c" "version_info")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x03" "sys")
QDEF(MP_QSTR_fileno, (const byte*)"\x82\x06" "fileno")
QDEF(MP_QSTR_makefile, (const byte*)"\xc1\x08" "makefile")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x07" "usocket")
QDEF(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x0b" "getaddrinfo")
QDEF(MP_QSTR_inet_pton, (const byte*)"\xc9\x09" "inet_pton")
QDEF(MP_QSTR_inet_ntop, (const byte*)"\x89\x09" "inet_ntop")
QDEF(MP_QSTR_sockaddr, (const byte*)"\x62\x08" "sockaddr")
QDEF(MP_QSTR_MSG_DONTROUTE, (const byte*)"\xeb\x0d" "MSG_DONTROUTE")
QDEF(MP_QSTR_MSG_DONTWAIT, (const byte*)"\x99\x0c" "MSG_DONTWAIT")
QDEF(MP_QSTR_SO_BROADCAST, (const byte*)"\xf9\x0c" "SO_BROADCAST")
QDEF(MP_QSTR_AF_UNIX, (const byte*)"\xf7\x07" "AF_UNIX")
QDEF(MP_QSTR_SO_ERROR, (const byte*)"\x3e\x08" "SO_ERROR")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x03" "uos")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x04" "stat")
QDEF(MP_QSTR_statvfs, (const byte*)"\x14\x07" "statvfs")
QDEF(MP_QSTR_unlink, (const byte*)"\xfe\x06" "unlink")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\x05" "chdir")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\x06" "getcwd")
QDEF(MP_QSTR_dupterm, (const byte*)"\xaa\x07" "dupterm")
QDEF(MP_QSTR_umount, (const byte*)"\xdd\x06" "umount")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x05" "uname")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x07" "sysname")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\x0a" "unregister")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x07" "uselect")
QDEF(MP_QSTR_writeblocks, (const byte*)"\x02\x0b" "writeblocks")
QDEF(MP_QSTR_writebyte, (const byte*)"\xd2\x09" "writebyte")
QDEF(MP_QSTR_tell, (const byte*)"\x14\x04" "tell")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\x07" "listdir")
QDEF(MP_QSTR_ilistdir, (const byte*)"\x71\x08" "ilistdir")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\x05" "mkdir")
QDEF(MP_QSTR_VfsFat, (const byte*)"\x15\x06" "VfsFat")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x06" "rename")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\x05" "rmdir")
QDEF(MP_QSTR_mkfs, (const byte*)"\x76\x04" "mkfs")
QDEF(MP_QSTR_socket, (const byte*)"\x60\x06" "socket")
QDEF(MP_QSTR_AF_INET6, (const byte*)"\x7d\x08" "AF_INET6")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x08" "SOCK_RAW")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\x07" "AF_INET")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x07" "connect")
QDEF(MP_QSTR_bind, (const byte*)"\x84\x04" "bind")
QDEF(MP_QSTR_listen, (const byte*)"\xcc\x06" "listen")
QDEF(MP_QSTR_accept, (const byte*)"\x85\x06" "accept")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\x04" "recv")
QDEF(MP_QSTR_sendto, (const byte*)"\x22\x06" "sendto")
QDEF(MP_QSTR_recvfrom, (const byte*)"\x91\x08" "recvfrom")
QDEF(MP_QSTR_setsockopt, (const byte*)"\x38\x0a" "setsockopt")
QDEF(MP_QSTR_settimeout, (const byte*)"\xdc\x0a" "settimeout")
QDEF(MP_QSTR_setblocking, (const byte*)"\x6e\x0b" "setblocking")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x08" "calcsize")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\x09" "pack_into")
QDEF(MP_QSTR_os, (const byte*)"\x79\x02" "os")
QDEF(MP_QSTR_zlib, (const byte*)"\xf8\x04" "zlib")
QDEF(MP_QSTR_hashlib, (const byte*)"\x10\x07" "hashlib")
QDEF(MP_QSTR_binascii, (const byte*)"\x91\x08" "binascii")
QDEF(MP_QSTR_collections, (const byte*)"\xe0\x0b" "collections")
QDEF(MP_QSTR_re, (const byte*)"\xd2\x02" "re")
QDEF(MP_QSTR_json, (const byte*)"\xfd\x04" "json")
QDEF(MP_QSTR_heapq, (const byte*)"\x68\x05" "heapq")
QDEF(MP_QSTR_path, (const byte*)"\x88\x04" "path")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\x04" "argv")
QDEF(MP_QSTR_version, (const byte*)"\xbf\x07" "version")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x0e" "implementation")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x0f" "print_exception")
QDEF(MP_QSTR_uerrno, (const byte*)"\xb4\x06" "uerrno")
QDEF(MP_QSTR_errno, (const byte*)"\xc1\x05" "errno")
QDEF(MP_QSTR_errorcode, (const byte*)"\x10\x09" "errorcode")
QDEF(MP_QSTR_EPERM, (const byte*)"\xea\x05" "EPERM")
QDEF(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x07" "ENOBUFS")
QDEF(MP_QSTR_ENODEV, (const byte*)"\xb6\x06" "ENODEV")
QDEF(MP_QSTR_ENOENT, (const byte*)"\x5e\x06" "ENOENT")
QDEF(MP_QSTR_ENOMEM, (const byte*)"\xa4\x06" "ENOMEM")
QDEF(MP_QSTR_ENOTCONN, (const byte*)"\x79\x08" "ENOTCONN")
QDEF(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x0a" "EOPNOTSUPP")
QDEF(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\x09" "ETIMEDOUT")
QDEF(MP_QSTR_EIO, (const byte*)"\x86\x03" "EIO")
QDEF(MP_QSTR_EBADF, (const byte*)"\x61\x05" "EBADF")
QDEF(MP_QSTR_EAGAIN, (const byte*)"\x20\x06" "EAGAIN")
QDEF(MP_QSTR_EACCES, (const byte*)"\x37\x06" "EACCES")
QDEF(MP_QSTR_EEXIST, (const byte*)"\x53\x06" "EEXIST")
QDEF(MP_QSTR_EISDIR, (const byte*)"\xa5\x06" "EISDIR")
QDEF(MP_QSTR_EINVAL, (const byte*)"\x5c\x06" "EINVAL")
QDEF(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x0a" "EADDRINUSE")
QDEF(MP_QSTR_ECONNABORTED, (const byte*)"\x27\x0c" "ECONNABORTED")
QDEF(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x0c" "ECONNREFUSED")
QDEF(MP_QSTR_ECONNRESET, (const byte*)"\x19\x0a" "ECONNRESET")
QDEF(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x0c" "EHOSTUNREACH")
QDEF(MP_QSTR_EALREADY, (const byte*)"\x46\x08" "EALREADY")
QDEF(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\x0b" "EINPROGRESS")
QDEF(MP_QSTR_ussl, (const byte*)"\x1c\x04" "ussl")
QDEF(MP_QSTR_wrap_socket, (const byte*)"\xcb\x0b" "wrap_socket")
QDEF(MP_QSTR_getpeercert, (const byte*)"\xb1\x0b" "getpeercert")
QDEF(MP_QSTR_cert, (const byte*)"\x25\x04" "cert")
QDEF(MP_QSTR_server_side, (const byte*)"\x64\x0b" "server_side")
QDEF(MP_QSTR_server_hostname, (const byte*)"\x58\x0f" "server_hostname")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x09" "readlines")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x06" "decode")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\x07" "delattr")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x06" "FileIO")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x0d" "TextIOWrapper")
QDEF(MP_QSTR_io, (const byte*)"\x23\x02" "io")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x06" "stdout")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x06" "stderr")


// This file was automatically generated by makeqstrdata.py


// openmv poting
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x8d\x06" "deinit")
QDEF(MP_QSTR___locals__, (const byte*)"\x7b\x6a\x0a" "__locals__")
QDEF(MP_QSTR_BufferError, (const byte*)"\x1d\x59\x0b" "BufferError")
QDEF(MP_QSTR_FileExistsError, (const byte*)"\x5b\x14\x0f" "FileExistsError")
QDEF(MP_QSTR_FileNotFoundError, (const byte*)"\x78\x89\x11" "FileNotFoundError")
QDEF(MP_QSTR_FloatingPointError, (const byte*)"\x01\x34\x12" "FloatingPointError")
QDEF(MP_QSTR_UnboundLocalError, (const byte*)"\x99\x22\x11" "UnboundLocalError")
QDEF(MP_QSTR_image, (const byte*)"\x42\xa0\x05" "image")
QDEF(MP_QSTR_Image, (const byte*)"\x62\xa0\x05" "Image")
QDEF(MP_QSTR_rgb_to_lab, (const byte*)"\xc6\x91\x0a" "rgb_to_lab")
QDEF(MP_QSTR_lab_to_rgb, (const byte*)"\x46\x56\x0a" "lab_to_rgb")
QDEF(MP_QSTR_rgb_to_grayscale, (const byte*)"\xfc\xc1\x10" "rgb_to_grayscale")
QDEF(MP_QSTR_grayscale_to_rgb, (const byte*)"\x7c\xfd\x10" "grayscale_to_rgb")
QDEF(MP_QSTR_HaarCascade, (const byte*)"\x6d\xe8\x0b" "HaarCascade")
QDEF(MP_QSTR_SEARCH_EX, (const byte*)"\xa9\x97\x09" "SEARCH_EX")
QDEF(MP_QSTR_SEARCH_DS, (const byte*)"\x83\x97\x09" "SEARCH_DS")
QDEF(MP_QSTR_EDGE_CANNY, (const byte*)"\x02\x57\x0a" "EDGE_CANNY")
QDEF(MP_QSTR_EDGE_SIMPLE, (const byte*)"\x17\x47\x0b" "EDGE_SIMPLE")
QDEF(MP_QSTR_CORNER_FAST, (const byte*)"\xfd\x2b\x0b" "CORNER_FAST")
QDEF(MP_QSTR_CORNER_AGAST, (const byte*)"\xbd\x23\x0c" "CORNER_AGAST")
QDEF(MP_QSTR_load_descriptor, (const byte*)"\x4f\x2f\x0f" "load_descriptor")
QDEF(MP_QSTR_save_descriptor, (const byte*)"\xa8\x37\x0f" "save_descriptor")
QDEF(MP_QSTR_match_descriptor, (const byte*)"\xda\x35\x10" "match_descriptor")
QDEF(MP_QSTR_copy_to_fb, (const byte*)"\xbf\x58\x0a" "copy_to_fb")
QDEF(MP_QSTR_save, (const byte*)"\xa4\x83\x04" "save")
QDEF(MP_QSTR_compress, (const byte*)"\xa3\x7a\x08" "compress")
QDEF(MP_QSTR_compress_for_ide, (const byte*)"\x90\xc8\x10" "compress_for_ide")
QDEF(MP_QSTR_compressed, (const byte*)"\x42\xbc\x0a" "compressed")
QDEF(MP_QSTR_compressed_for_ide, (const byte*)"\xf1\xb2\x12" "compressed_for_ide")
QDEF(MP_QSTR_width, (const byte*)"\x23\x75\x05" "width")
QDEF(MP_QSTR_height, (const byte*)"\xfa\x33\x06" "height")
QDEF(MP_QSTR_size, (const byte*)"\x20\xa5\x04" "size")
QDEF(MP_QSTR_get_pixel, (const byte*)"\xa4\x17\x09" "get_pixel")
QDEF(MP_QSTR_set_pixel, (const byte*)"\xb0\xda\x09" "set_pixel")
QDEF(MP_QSTR_draw_line, (const byte*)"\x54\x85\x09" "draw_line")
QDEF(MP_QSTR_draw_rectangle, (const byte*)"\x5b\x40\x0e" "draw_rectangle")
QDEF(MP_QSTR_draw_circle, (const byte*)"\x68\x49\x0b" "draw_circle")
QDEF(MP_QSTR_draw_string, (const byte*)"\xaf\x41\x0b" "draw_string")
QDEF(MP_QSTR_draw_cross, (const byte*)"\x84\x34\x0a" "draw_cross")
QDEF(MP_QSTR_draw_keypoints, (const byte*)"\x32\xb7\x0e" "draw_keypoints")
QDEF(MP_QSTR_binary, (const byte*)"\x4a\x8f\x06" "binary")
QDEF(MP_QSTR_and, (const byte*)"\x0e\x33\x03" "and")
QDEF(MP_QSTR_b_and, (const byte*)"\xd3\x1b\x05" "b_and")
QDEF(MP_QSTR_nand, (const byte*)"\x00\x75\x04" "nand")
QDEF(MP_QSTR_b_nand, (const byte*)"\xfd\xf6\x06" "b_nand")
QDEF(MP_QSTR_or, (const byte*)"\x78\x6f\x02" "or")
QDEF(MP_QSTR_b_or, (const byte*)"\x05\x00\x04" "b_or")
QDEF(MP_QSTR_nor, (const byte*)"\xb6\x57\x03" "nor")
QDEF(MP_QSTR_b_nor, (const byte*)"\x2b\x07\x05" "b_nor")
QDEF(MP_QSTR_xor, (const byte*)"\x20\x93\x03" "xor")
QDEF(MP_QSTR_b_xor, (const byte*)"\xbd\xbb\x05" "b_xor")
QDEF(MP_QSTR_xnor, (const byte*)"\xee\xf6\x04" "xnor")
QDEF(MP_QSTR_b_xnor, (const byte*)"\x93\x33\x06" "b_xnor")
QDEF(MP_QSTR_erode, (const byte*)"\x1c\x82\x05" "erode")
QDEF(MP_QSTR_dilate, (const byte*)"\x94\xd5\x06" "dilate")
QDEF(MP_QSTR_negate, (const byte*)"\x79\xd7\x06" "negate")
QDEF(MP_QSTR_blend, (const byte*)"\x04\x9e\x05" "blend")
QDEF(MP_QSTR_morph, (const byte*)"\xed\x1f\x05" "morph")
QDEF(MP_QSTR_midpoint, (const byte*)"\x49\x9a\x08" "midpoint")
QDEF(MP_QSTR_mean, (const byte*)"\xc2\xc9\x04" "mean")
QDEF(MP_QSTR_median, (const byte*)"\x0f\x95\x06" "median")
QDEF(MP_QSTR_gaussian, (const byte*)"\x10\x24\x08" "gaussian")
QDEF(MP_QSTR_midpoint_pool, (const byte*)"\x8a\xa3\x0d" "midpoint_pool")
QDEF(MP_QSTR_midpoint_pooled, (const byte*)"\xeb\xaa\x0f" "midpoint_pooled")
QDEF(MP_QSTR_mean_pool, (const byte*)"\xe1\xe5\x09" "mean_pool")
QDEF(MP_QSTR_mean_pooled, (const byte*)"\x80\xee\x0b" "mean_pooled")
QDEF(MP_QSTR_find_template, (const byte*)"\x2f\x7f\x0d" "find_template")
QDEF(MP_QSTR_find_displacement, (const byte*)"\x28\x38\x11" "find_displacement")
QDEF(MP_QSTR_kp_desc, (const byte*)"\x10\xc7\x07" "kp_desc")
QDEF(MP_QSTR_lbp_desc, (const byte*)"\x15\xca\x08" "lbp_desc")
QDEF(MP_QSTR_Cascade, (const byte*)"\xf7\x46\x07" "Cascade")
QDEF(MP_QSTR_histeq, (const byte*)"\x57\x90\x06" "histeq")
QDEF(MP_QSTR_mask_ellipse, (const byte*)"\x84\xb5\x0c" "mask_ellipse")
QDEF(MP_QSTR_find_features, (const byte*)"\xf8\x12\x0d" "find_features")
QDEF(MP_QSTR_find_keypoints, (const byte*)"\x57\xb6\x0e" "find_keypoints")
QDEF(MP_QSTR_find_lbp, (const byte*)"\x81\xa4\x08" "find_lbp")
QDEF(MP_QSTR_find_eye, (const byte*)"\x26\xc8\x08" "find_eye")
QDEF(MP_QSTR_find_edges, (const byte*)"\x6f\x1a\x0a" "find_edges")
QDEF(MP_QSTR_find_hog, (const byte*)"\x3f\xb6\x08" "find_hog")
QDEF(MP_QSTR_cmp_lbp, (const byte*)"\xfa\xfa\x07" "cmp_lbp")
QDEF(MP_QSTR_quality, (const byte*)"\x28\xfc\x07" "quality")
QDEF(MP_QSTR_color, (const byte*)"\xd8\x06\x05" "color")
QDEF(MP_QSTR_roi, (const byte*)"\xb1\x8b\x03" "roi")
QDEF(MP_QSTR_offset, (const byte*)"\x48\x3c\x06" "offset")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x2f\x09" "threshold")
QDEF(MP_QSTR_mul, (const byte*)"\x31\x46\x03" "mul")
QDEF(MP_QSTR_bias, (const byte*)"\xbc\x66\x04" "bias")
QDEF(MP_QSTR_percentile, (const byte*)"\x7e\x07\x0a" "percentile")
QDEF(MP_QSTR_normalized, (const byte*)"\xa4\xa6\x0a" "normalized")
QDEF(MP_QSTR_filter_outliers, (const byte*)"\x55\xeb\x0f" "filter_outliers")
QDEF(MP_QSTR_scale_factor, (const byte*)"\x8f\x49\x0c" "scale_factor")
QDEF(MP_QSTR_max_keypoints, (const byte*)"\x26\xd1\x0d" "max_keypoints")
QDEF(MP_QSTR_corner_detector, (const byte*)"\x47\x24\x0f" "corner_detector")
QDEF(MP_QSTR_kptmatch, (const byte*)"\xb9\x42\x08" "kptmatch")
QDEF(MP_QSTR_lcd, (const byte*)"\xae\x3f\x03" "lcd")
QDEF(MP_QSTR_set_backlight, (const byte*)"\xcd\xbe\x0d" "set_backlight")
QDEF(MP_QSTR_get_backlight, (const byte*)"\xd9\xac\x0d" "get_backlight")
QDEF(MP_QSTR_display, (const byte*)"\x1f\x55\x07" "display")
QDEF(MP_QSTR_fir, (const byte*)"\xf8\x37\x03" "fir")
QDEF(MP_QSTR_read_ta, (const byte*)"\x5d\x81\x07" "read_ta")
QDEF(MP_QSTR_read_ir, (const byte*)"\xb3\x7d\x07" "read_ir")
QDEF(MP_QSTR_draw_ta, (const byte*)"\x8f\x2e\x07" "draw_ta")
QDEF(MP_QSTR_draw_ir, (const byte*)"\xe1\x2f\x07" "draw_ir")
QDEF(MP_QSTR_alpha, (const byte*)"\x51\x64\x05" "alpha")
QDEF(MP_QSTR_scale, (const byte*)"\x7d\x51\x05" "scale")
QDEF(MP_QSTR_refresh, (const byte*)"\x98\x4c\x07" "refresh")
QDEF(MP_QSTR_resolution, (const byte*)"\x8b\x47\x0a" "resolution")
QDEF(MP_QSTR_gif, (const byte*)"\xad\x3b\x03" "gif")
QDEF(MP_QSTR_Gif, (const byte*)"\xcd\xbb\x03" "Gif")
QDEF(MP_QSTR_add_frame, (const byte*)"\xa6\xc1\x09" "add_frame")
QDEF(MP_QSTR_loop, (const byte*)"\x39\x24\x04" "loop")
QDEF(MP_QSTR_mjpeg, (const byte*)"\xf0\x2b\x05" "mjpeg")
QDEF(MP_QSTR_Mjpeg, (const byte*)"\x10\x2b\x05" "Mjpeg")
QDEF(MP_QSTR_led, (const byte*)"\x68\x40\x03" "led")
QDEF(MP_QSTR_RED, (const byte*)"\x96\x06\x03" "RED")
QDEF(MP_QSTR_GREEN, (const byte*)"\xde\x98\x05" "GREEN")
QDEF(MP_QSTR_BLUE, (const byte*)"\x3b\x3b\x04" "BLUE")
QDEF(MP_QSTR_IR, (const byte*)"\x3e\x73\x02" "IR")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x43\x06" "toggle")
QDEF(MP_QSTR_ticks, (const byte*)"\x43\x08\x05" "ticks")
QDEF(MP_QSTR_clock, (const byte*)"\x2d\x65\x05" "clock")
QDEF(MP_QSTR_Clock, (const byte*)"\x4d\x86\x05" "Clock")
QDEF(MP_QSTR_tick, (const byte*)"\x30\xc2\x04" "tick")
QDEF(MP_QSTR_fps, (const byte*)"\xc0\x38\x03" "fps")
QDEF(MP_QSTR_avg, (const byte*)"\x15\x34\x03" "avg")
QDEF(MP_QSTR_sensor, (const byte*)"\x53\xcc\x06" "sensor")
QDEF(MP_QSTR_BAYER, (const byte*)"\xa8\xfd\x05" "BAYER")
QDEF(MP_QSTR_RGB565, (const byte*)"\x64\xcc\x06" "RGB565")
QDEF(MP_QSTR_YUV422, (const byte*)"\x0b\xfa\x06" "YUV422")
QDEF(MP_QSTR_GRAYSCALE, (const byte*)"\x70\x1b\x09" "GRAYSCALE")
QDEF(MP_QSTR_JPEG, (const byte*)"\x3d\xce\x04" "JPEG")
QDEF(MP_QSTR_OV9650, (const byte*)"\x76\x56\x06" "OV9650")
QDEF(MP_QSTR_OV2640, (const byte*)"\x3c\x45\x06" "OV2640")
QDEF(MP_QSTR_OV7725, (const byte*)"\x5b\xb5\x06" "OV7725")
QDEF(MP_QSTR_MT9V034, (const byte*)"\xc4\x53\x07" "MT9V034")
QDEF(MP_QSTR_line_filter, (const byte*)"\xd4\x9e\x0b" "line_filter")
QDEF(MP_QSTR_QQCIF, (const byte*)"\xa9\x2a\x05" "QQCIF")
QDEF(MP_QSTR_QCIF, (const byte*)"\x58\x67\x04" "QCIF")
QDEF(MP_QSTR_CIF, (const byte*)"\x89\xd0\x03" "CIF")
QDEF(MP_QSTR_QQSIF, (const byte*)"\xb9\x6e\x05" "QQSIF")
QDEF(MP_QSTR_QSIF, (const byte*)"\x48\x23\x04" "QSIF")
QDEF(MP_QSTR_SIF, (const byte*)"\x99\x14\x03" "SIF")
QDEF(MP_QSTR_QQQQVGA, (const byte*)"\x95\x34\x07" "QQQQVGA")
QDEF(MP_QSTR_QQQVGA, (const byte*)"\x24\xec\x06" "QQQVGA")
QDEF(MP_QSTR_QQVGA, (const byte*)"\x75\x61\x05" "QQVGA")
QDEF(MP_QSTR_QVGA, (const byte*)"\x84\xfc\x04" "QVGA")
QDEF(MP_QSTR_VGA, (const byte*)"\xd5\xf6\x03" "VGA")
QDEF(MP_QSTR_HQQQVGA, (const byte*)"\x8c\x9a\x07" "HQQQVGA")
QDEF(MP_QSTR_HQQVGA, (const byte*)"\xdd\xf3\x06" "HQQVGA")
QDEF(MP_QSTR_HQVGA, (const byte*)"\xec\xd1\x05" "HQVGA")
QDEF(MP_QSTR_LCD, (const byte*)"\xce\xdc\x03" "LCD")
QDEF(MP_QSTR_QQVGA2, (const byte*)"\x27\x90\x06" "QQVGA2")
QDEF(MP_QSTR_B40x30, (const byte*)"\x18\x5a\x06" "B40x30")
QDEF(MP_QSTR_B64x32, (const byte*)"\x1c\x5b\x06" "B64x32")
QDEF(MP_QSTR_B64x64, (const byte*)"\xff\x5a\x06" "B64x64")
QDEF(MP_QSTR_SVGA, (const byte*)"\xc6\x25\x04" "SVGA")
QDEF(MP_QSTR_SXGA, (const byte*)"\x48\x70\x04" "SXGA")
QDEF(MP_QSTR_UXGA, (const byte*)"\x8e\x06\x04" "UXGA")
QDEF(MP_QSTR_NORMAL, (const byte*)"\xf6\x79\x06" "NORMAL")
QDEF(MP_QSTR_NEGATIVE, (const byte*)"\xe6\xf1\x08" "NEGATIVE")
QDEF(MP_QSTR_snapshot, (const byte*)"\x49\xb8\x08" "snapshot")
QDEF(MP_QSTR_skip_frames, (const byte*)"\x55\xcb\x0b" "skip_frames")
QDEF(MP_QSTR_get_fb, (const byte*)"\x08\x40\x06" "get_fb")
QDEF(MP_QSTR_get_id, (const byte*)"\xa1\x3f\x06" "get_id")
QDEF(MP_QSTR_set_pixformat, (const byte*)"\x3a\x5c\x0d" "set_pixformat")
QDEF(MP_QSTR_set_framerate, (const byte*)"\x47\x05\x0d" "set_framerate")
QDEF(MP_QSTR_set_framesize, (const byte*)"\x20\xa2\x0d" "set_framesize")
QDEF(MP_QSTR_set_vsync_output, (const byte*)"\x69\xb2\x10" "set_vsync_output")
QDEF(MP_QSTR_set_binning, (const byte*)"\x13\x30\x0b" "set_binning")
QDEF(MP_QSTR_set_windowing, (const byte*)"\xf4\x61\x0d" "set_windowing")
QDEF(MP_QSTR_set_gainceiling, (const byte*)"\xba\x38\x0f" "set_gainceiling")
QDEF(MP_QSTR_set_contrast, (const byte*)"\x5a\x7f\x0c" "set_contrast")
QDEF(MP_QSTR_set_brightness, (const byte*)"\x91\xbe\x0e" "set_brightness")
QDEF(MP_QSTR_set_saturation, (const byte*)"\x84\xfc\x0e" "set_saturation")
QDEF(MP_QSTR_set_quality, (const byte*)"\xd5\x79\x0b" "set_quality")
QDEF(MP_QSTR_set_colorbar, (const byte*)"\xd4\xed\x0c" "set_colorbar")
QDEF(MP_QSTR_set_auto_gain, (const byte*)"\xc9\x83\x0d" "set_auto_gain")
QDEF(MP_QSTR_set_auto_exposure, (const byte*)"\x1b\xd0\x11" "set_auto_exposure")
QDEF(MP_QSTR_set_auto_whitebal, (const byte*)"\x80\x67\x11" "set_auto_whitebal")
QDEF(MP_QSTR_set_hmirror, (const byte*)"\x69\x72\x0b" "set_hmirror")
QDEF(MP_QSTR_set_vflip, (const byte*)"\xdd\x73\x09" "set_vflip")
QDEF(MP_QSTR_set_special_effect, (const byte*)"\xd1\x2a\x12" "set_special_effect")
QDEF(MP_QSTR_set_lens_correction, (const byte*)"\xa5\x50\x13" "set_lens_correction")
QDEF(MP_QSTR___write_reg, (const byte*)"\xd7\xa5\x0b" "__write_reg")
QDEF(MP_QSTR___read_reg, (const byte*)"\x38\xbc\x0a" "__read_reg")
QDEF(MP_QSTR_P1, (const byte*)"\xa4\x74\x02" "P1")
QDEF(MP_QSTR_P2, (const byte*)"\xa7\x74\x02" "P2")
QDEF(MP_QSTR_P3, (const byte*)"\xa6\x74\x02" "P3")
QDEF(MP_QSTR_P4, (const byte*)"\xa1\x74\x02" "P4")
QDEF(MP_QSTR_P5, (const byte*)"\xa0\x74\x02" "P5")
QDEF(MP_QSTR_P6, (const byte*)"\xa3\x74\x02" "P6")
QDEF(MP_QSTR_PA1, (const byte*)"\x65\x0f\x03" "PA1")
QDEF(MP_QSTR_PA2, (const byte*)"\x66\x0f\x03" "PA2")
QDEF(MP_QSTR_PA3, (const byte*)"\x67\x0f\x03" "PA3")
QDEF(MP_QSTR_PA4, (const byte*)"\x60\x0f\x03" "PA4")
QDEF(MP_QSTR_PA5, (const byte*)"\x61\x0f\x03" "PA5")
QDEF(MP_QSTR_PA6, (const byte*)"\x62\x0f\x03" "PA6")
QDEF(MP_QSTR_PA7, (const byte*)"\x63\x0f\x03" "PA7")
QDEF(MP_QSTR_PA8, (const byte*)"\x6c\x0f\x03" "PA8")
QDEF(MP_QSTR_PB1, (const byte*)"\x86\x0f\x03" "PB1")
QDEF(MP_QSTR_PB2, (const byte*)"\x85\x0f\x03" "PB2")
QDEF(MP_QSTR_PB3, (const byte*)"\x84\x0f\x03" "PB3")
QDEF(MP_QSTR_PB4, (const byte*)"\x83\x0f\x03" "PB4")
QDEF(MP_QSTR_OUT, (const byte*)"\x0b\xe3\x03" "OUT")
QDEF(MP_QSTR_gpio, (const byte*)"\x54\xd8\x04" "gpio")
QDEF(MP_QSTR_GPIO, (const byte*)"\x14\xe0\x04" "GPIO")
QDEF(MP_QSTR_low, (const byte*)"\x31\x3f\x03" "low")
QDEF(MP_QSTR_high, (const byte*)"\x2b\x4c\x04" "high")
QDEF(MP_QSTR_spi, (const byte*)"\xcf\x8d\x03" "spi")
QDEF(MP_QSTR_write_image, (const byte*)"\xc0\xef\x0b" "write_image")
QDEF(MP_QSTR_uart, (const byte*)"\x77\x1a\x04" "uart")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x34\x04" "file")
QDEF(MP_QSTR_wlan, (const byte*)"\x51\x8c\x04" "wlan")
QDEF(MP_QSTR_WEP, (const byte*)"\x07\x03\x03" "WEP")
QDEF(MP_QSTR_WPA, (const byte*)"\xe3\x00\x03" "WPA")
QDEF(MP_QSTR_WPA2, (const byte*)"\x71\x1d\x04" "WPA2")
QDEF(MP_QSTR_connected, (const byte*)"\x7a\x25\x09" "connected")
QDEF(MP_QSTR_ifconfig, (const byte*)"\xe0\x41\x08" "ifconfig")
QDEF(MP_QSTR_patch_version, (const byte*)"\x6e\x98\x0d" "patch_version")
QDEF(MP_QSTR_patch_program, (const byte*)"\x40\x73\x0d" "patch_program")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x41\x06" "select")
QDEF(MP_QSTR_IPPROTO_IP, (const byte*)"\x0c\x8e\x0a" "IPPROTO_IP")
QDEF(MP_QSTR_IPPROTO_ICMP, (const byte*)"\xa2\x87\x0c" "IPPROTO_ICMP")
QDEF(MP_QSTR_IPPROTO_IPV4, (const byte*)"\x2e\x4b\x0c" "IPPROTO_IPV4")
QDEF(MP_QSTR_IPPROTO_TCP, (const byte*)"\xb2\xde\x0b" "IPPROTO_TCP")
QDEF(MP_QSTR_IPPROTO_UDP, (const byte*)"\x54\xdb\x0b" "IPPROTO_UDP")
QDEF(MP_QSTR_IPPROTO_IPV6, (const byte*)"\x2c\x4b\x0c" "IPPROTO_IPV6")
QDEF(MP_QSTR_IPPROTO_RAW, (const byte*)"\xf1\x08\x0b" "IPPROTO_RAW")
QDEF(MP_QSTR_WINC, (const byte*)"\x76\x76\x04" "WINC")
QDEF(MP_QSTR_start_ap, (const byte*)"\x4b\xeb\x08" "start_ap")
QDEF(MP_QSTR_disconnect, (const byte*)"\xa5\x85\x0a" "disconnect")
QDEF(MP_QSTR_isconnected, (const byte*)"\x80\x99\x0b" "isconnected")
QDEF(MP_QSTR_connected_sta, (const byte*)"\x63\xc9\x0d" "connected_sta")
QDEF(MP_QSTR_wait_for_sta, (const byte*)"\x33\x41\x0c" "wait_for_sta")
QDEF(MP_QSTR_fw_version, (const byte*)"\x71\x22\x0a" "fw_version")
QDEF(MP_QSTR_fw_dump, (const byte*)"\x67\xa5\x07" "fw_dump")
QDEF(MP_QSTR_fw_update, (const byte*)"\x3a\x19\x09" "fw_update")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF(MP_QSTR_rssi, (const byte*)"\x7e\xb0\x04" "rssi")
QDEF(MP_QSTR_OPEN, (const byte*)"\x91\x42\x04" "OPEN")
QDEF(MP_QSTR_WPA_PSK, (const byte*)"\xb4\x1d\x07" "WPA_PSK")
QDEF(MP_QSTR_802_1X, (const byte*)"\x69\xe4\x06" "802_1X")
QDEF(MP_QSTR_MODE_STA, (const byte*)"\x5f\xe2\x08" "MODE_STA")
QDEF(MP_QSTR_MODE_AP, (const byte*)"\x88\x17\x07" "MODE_AP")
QDEF(MP_QSTR_MODE_P2P, (const byte*)"\x6b\xd1\x08" "MODE_P2P")
QDEF(MP_QSTR_MODE_FIRMWARE, (const byte*)"\x88\x75\x0d" "MODE_FIRMWARE")
QDEF(MP_QSTR_ssid, (const byte*)"\x08\x4b\x04" "ssid")
QDEF(MP_QSTR_security, (const byte*)"\x93\x48\x08" "security")
QDEF(MP_QSTR_bssid, (const byte*)"\x4a\x3c\x05" "bssid")
QDEF(MP_QSTR_cpufreq, (const byte*)"\x23\xc3\x07" "cpufreq")
QDEF(MP_QSTR_CPUFREQ_120MHZ, (const byte*)"\x70\xf0\x0e" "CPUFREQ_120MHZ")
QDEF(MP_QSTR_CPUFREQ_144MHZ, (const byte*)"\x72\x7e\x0e" "CPUFREQ_144MHZ")
QDEF(MP_QSTR_CPUFREQ_168MHZ, (const byte*)"\x7c\x8f\x0e" "CPUFREQ_168MHZ")
QDEF(MP_QSTR_CPUFREQ_192MHZ, (const byte*)"\xf9\x3d\x0e" "CPUFREQ_192MHZ")
QDEF(MP_QSTR_CPUFREQ_216MHZ, (const byte*)"\x56\x00\x0e" "CPUFREQ_216MHZ")
QDEF(MP_QSTR_get_frequency, (const byte*)"\x48\x37\x0d" "get_frequency")
QDEF(MP_QSTR_set_frequency, (const byte*)"\x5c\x34\x0d" "set_frequency")
QDEF(MP_QSTR_lens_corr, (const byte*)"\x02\xc4\x09" "lens_corr")
QDEF(MP_QSTR_strength, (const byte*)"\xe0\x15\x08" "strength")
QDEF(MP_QSTR_zoom, (const byte*)"\xf2\x23\x04" "zoom")
QDEF(MP_QSTR_rotation_corr, (const byte*)"\xa2\x2c\x0d" "rotation_corr")
QDEF(MP_QSTR_x_rotation, (const byte*)"\x56\x6c\x0a" "x_rotation")
QDEF(MP_QSTR_y_rotation, (const byte*)"\xf7\x6c\x0a" "y_rotation")
QDEF(MP_QSTR_z_rotation, (const byte*)"\x14\xea\x0a" "z_rotation")
QDEF(MP_QSTR_x_translation, (const byte*)"\xa9\xbf\x0d" "x_translation")
QDEF(MP_QSTR_y_translation, (const byte*)"\xe8\xb7\x0d" "y_translation")
QDEF(MP_QSTR_get_hist, (const byte*)"\xaa\x5c\x08" "get_hist")
QDEF(MP_QSTR_get_histogram, (const byte*)"\xdc\xda\x0d" "get_histogram")
QDEF(MP_QSTR_bins, (const byte*)"\x93\x64\x04" "bins")
QDEF(MP_QSTR_l_bins, (const byte*)"\x20\xe6\x06" "l_bins")
QDEF(MP_QSTR_a_bins, (const byte*)"\x8d\xa5\x06" "a_bins")
QDEF(MP_QSTR_b_bins, (const byte*)"\x6e\x07\x06" "b_bins")
QDEF(MP_QSTR_histogram, (const byte*)"\xb5\x6f\x09" "histogram")
QDEF(MP_QSTR_get_percentile, (const byte*)"\xf7\x7b\x0e" "get_percentile")
QDEF(MP_QSTR_get_stats, (const byte*)"\x2d\x79\x09" "get_stats")
QDEF(MP_QSTR_get_statistics, (const byte*)"\xc9\xed\x0e" "get_statistics")
QDEF(MP_QSTR_statistics, (const byte*)"\x00\x5a\x0a" "statistics")
QDEF(MP_QSTR_l_value, (const byte*)"\x9d\xce\x07" "l_value")
QDEF(MP_QSTR_a_value, (const byte*)"\x90\x3a\x07" "a_value")
QDEF(MP_QSTR_b_value, (const byte*)"\x13\xc8\x07" "b_value")
QDEF(MP_QSTR_stdev, (const byte*)"\xb5\x02\x05" "stdev")
QDEF(MP_QSTR_lq, (const byte*)"\x98\x6e\x02" "lq")
QDEF(MP_QSTR_uq, (const byte*)"\xa1\x6f\x02" "uq")
QDEF(MP_QSTR_l_mean, (const byte*)"\xf1\x63\x06" "l_mean")
QDEF(MP_QSTR_l_median, (const byte*)"\xbc\x46\x08" "l_median")
QDEF(MP_QSTR_l_mode, (const byte*)"\x95\x48\x06" "l_mode")
QDEF(MP_QSTR_l_stdev, (const byte*)"\x26\xdc\x07" "l_stdev")
QDEF(MP_QSTR_l_min, (const byte*)"\x3c\xea\x05" "l_min")
QDEF(MP_QSTR_l_max, (const byte*)"\x22\xeb\x05" "l_max")
QDEF(MP_QSTR_l_lq, (const byte*)"\x2b\xe8\x04" "l_lq")
QDEF(MP_QSTR_l_uq, (const byte*)"\x12\xe5\x04" "l_uq")
QDEF(MP_QSTR_a_mean, (const byte*)"\xdc\x18\x06" "a_mean")
QDEF(MP_QSTR_a_median, (const byte*)"\x11\x54\x08" "a_median")
QDEF(MP_QSTR_a_mode, (const byte*)"\x38\x22\x06" "a_mode")
QDEF(MP_QSTR_a_stdev, (const byte*)"\xeb\x74\x07" "a_stdev")
QDEF(MP_QSTR_a_min, (const byte*)"\xf1\xcb\x05" "a_min")
QDEF(MP_QSTR_a_max, (const byte*)"\xef\xca\x05" "a_max")
QDEF(MP_QSTR_a_lq, (const byte*)"\x86\x53\x04" "a_lq")
QDEF(MP_QSTR_a_uq, (const byte*)"\xbf\x52\x04" "a_uq")
QDEF(MP_QSTR_b_mean, (const byte*)"\x3f\x50\x06" "b_mean")
QDEF(MP_QSTR_b_median, (const byte*)"\xf2\xef\x08" "b_median")
QDEF(MP_QSTR_b_mode, (const byte*)"\xdb\x8b\x06" "b_mode")
QDEF(MP_QSTR_b_stdev, (const byte*)"\xa8\xb8\x07" "b_stdev")
QDEF(MP_QSTR_b_min, (const byte*)"\xb2\x0b\x05" "b_min")
QDEF(MP_QSTR_b_max, (const byte*)"\xac\x0a\x05" "b_max")
QDEF(MP_QSTR_b_lq, (const byte*)"\x65\x00\x04" "b_lq")
QDEF(MP_QSTR_b_uq, (const byte*)"\x5c\xff\x04" "b_uq")
QDEF(MP_QSTR_get_regression, (const byte*)"\x03\xd7\x0e" "get_regression")
QDEF(MP_QSTR_x_stride, (const byte*)"\x9f\x0c\x08" "x_stride")
QDEF(MP_QSTR_y_stride, (const byte*)"\xbe\xa9\x08" "y_stride")
QDEF(MP_QSTR_robust, (const byte*)"\xe8\xd7\x06" "robust")
QDEF(MP_QSTR_line, (const byte*)"\xcb\x1c\x04" "line")
QDEF(MP_QSTR_x1, (const byte*)"\x4c\x71\x02" "x1")
QDEF(MP_QSTR_y1, (const byte*)"\x6d\x71\x02" "y1")
QDEF(MP_QSTR_x2, (const byte*)"\x4f\x71\x02" "x2")
QDEF(MP_QSTR_y2, (const byte*)"\x6e\x71\x02" "y2")
QDEF(MP_QSTR_length, (const byte*)"\x59\x87\x06" "length")
QDEF(MP_QSTR_magnitude, (const byte*)"\x69\x35\x09" "magnitude")
QDEF(MP_QSTR_theta, (const byte*)"\x49\x83\x05" "theta")
QDEF(MP_QSTR_rho, (const byte*)"\xd0\x8c\x03" "rho")
QDEF(MP_QSTR_find_blobs, (const byte*)"\x0f\xb9\x0a" "find_blobs")
QDEF(MP_QSTR_area_threshold, (const byte*)"\x7a\x62\x0e" "area_threshold")
QDEF(MP_QSTR_pixels_threshold, (const byte*)"\x76\x67\x10" "pixels_threshold")
QDEF(MP_QSTR_merge, (const byte*)"\x1d\x5b\x05" "merge")
QDEF(MP_QSTR_margin, (const byte*)"\x5b\x7d\x06" "margin")
QDEF(MP_QSTR_threshold_cb, (const byte*)"\x4c\x8a\x0c" "threshold_cb")
QDEF(MP_QSTR_merge_cb, (const byte*)"\x03\x03\x08" "merge_cb")
QDEF(MP_QSTR_blob, (const byte*)"\xa6\x50\x04" "blob")
QDEF(MP_QSTR_x, (const byte*)"\xdd\xb5\x01" "x")
QDEF(MP_QSTR_y, (const byte*)"\xdc\xb5\x01" "y")
QDEF(MP_QSTR_w, (const byte*)"\xd2\xb5\x01" "w")
QDEF(MP_QSTR_h, (const byte*)"\xcd\xb5\x01" "h")
QDEF(MP_QSTR_pixels, (const byte*)"\x9e\xf9\x06" "pixels")
QDEF(MP_QSTR_cx, (const byte*)"\xfe\x6e\x02" "cx")
QDEF(MP_QSTR_cy, (const byte*)"\xff\x6e\x02" "cy")
QDEF(MP_QSTR_rotation, (const byte*)"\xf1\x2f\x08" "rotation")
QDEF(MP_QSTR_area, (const byte*)"\x92\xc6\x04" "area")
QDEF(MP_QSTR_density, (const byte*)"\x1d\x55\x07" "density")
QDEF(MP_QSTR_find_lines, (const byte*)"\xc2\x06\x0a" "find_lines")
QDEF(MP_QSTR_theta_margin, (const byte*)"\xe8\x40\x0c" "theta_margin")
QDEF(MP_QSTR_rho_margin, (const byte*)"\x51\x56\x0a" "rho_margin")
QDEF(MP_QSTR_find_line_segments, (const byte*)"\x1e\xc8\x12" "find_line_segments")
QDEF(MP_QSTR_merge_distance, (const byte*)"\x01\xf9\x0e" "merge_distance")
QDEF(MP_QSTR_max_theta_diff, (const byte*)"\x70\xab\x0e" "max_theta_diff")
QDEF(MP_QSTR_find_circles, (const byte*)"\xfe\x02\x0c" "find_circles")
QDEF(MP_QSTR_x_margin, (const byte*)"\xfc\x75\x08" "x_margin")
QDEF(MP_QSTR_y_margin, (const byte*)"\xdd\x52\x08" "y_margin")
QDEF(MP_QSTR_r_margin, (const byte*)"\x36\x6a\x08" "r_margin")
QDEF(MP_QSTR_circle, (const byte*)"\xb7\xdd\x06" "circle")
QDEF(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF(MP_QSTR_find_rects, (const byte*)"\x6c\xe0\x0a" "find_rects")
QDEF(MP_QSTR_corners, (const byte*)"\xf1\xa0\x07" "corners")
QDEF(MP_QSTR_find_qrcodes, (const byte*)"\xc2\x0f\x0c" "find_qrcodes")
QDEF(MP_QSTR_qrcode, (const byte*)"\xcb\x8c\x06" "qrcode")
QDEF(MP_QSTR_payload, (const byte*)"\x4b\x05\x07" "payload")
QDEF(MP_QSTR_ecc_level, (const byte*)"\x69\x68\x09" "ecc_level")
QDEF(MP_QSTR_mask, (const byte*)"\x91\xba\x04" "mask")
QDEF(MP_QSTR_data_type, (const byte*)"\x72\x7c\x09" "data_type")
QDEF(MP_QSTR_eci, (const byte*)"\x6a\x22\x03" "eci")
QDEF(MP_QSTR_is_numeric, (const byte*)"\x0b\xba\x0a" "is_numeric")
QDEF(MP_QSTR_is_alphanumeric, (const byte*)"\x3f\x89\x0f" "is_alphanumeric")
QDEF(MP_QSTR_is_binary, (const byte*)"\x8f\x43\x09" "is_binary")
QDEF(MP_QSTR_is_kanji, (const byte*)"\x07\x60\x08" "is_kanji")
QDEF(MP_QSTR_find_apriltags, (const byte*)"\xd8\xa7\x0e" "find_apriltags")
QDEF(MP_QSTR_families, (const byte*)"\xd5\xeb\x08" "families")
QDEF(MP_QSTR_fx, (const byte*)"\x5b\x6e\x02" "fx")
QDEF(MP_QSTR_fy, (const byte*)"\x5a\x6e\x02" "fy")
QDEF(MP_QSTR_apriltag, (const byte*)"\x91\xf5\x08" "apriltag")
QDEF(MP_QSTR_family, (const byte*)"\x33\xca\x06" "family")
QDEF(MP_QSTR_hamming, (const byte*)"\xcc\xd4\x07" "hamming")
QDEF(MP_QSTR_goodness, (const byte*)"\x6d\xfc\x08" "goodness")
QDEF(MP_QSTR_decision_margin, (const byte*)"\x14\x18\x0f" "decision_margin")
QDEF(MP_QSTR_z_translation, (const byte*)"\xab\x60\x0d" "z_translation")
QDEF(MP_QSTR_TAG16H5, (const byte*)"\xcd\x0e\x07" "TAG16H5")
QDEF(MP_QSTR_TAG25H7, (const byte*)"\x2f\x66\x07" "TAG25H7")
QDEF(MP_QSTR_TAG25H9, (const byte*)"\x21\x66\x07" "TAG25H9")
QDEF(MP_QSTR_TAG36H10, (const byte*)"\x5b\xe8\x08" "TAG36H10")
QDEF(MP_QSTR_TAG36H11, (const byte*)"\x5a\xe8\x08" "TAG36H11")
QDEF(MP_QSTR_ARTOOLKIT, (const byte*)"\xb8\xe1\x09" "ARTOOLKIT")
QDEF(MP_QSTR_find_datamatrices, (const byte*)"\x39\xd8\x11" "find_datamatrices")
QDEF(MP_QSTR_effort, (const byte*)"\xa9\xb7\x06" "effort")
QDEF(MP_QSTR_datamatrix, (const byte*)"\x4e\x1d\x0a" "datamatrix")
QDEF(MP_QSTR_rows, (const byte*)"\xfc\x01\x04" "rows")
QDEF(MP_QSTR_columns, (const byte*)"\x40\x45\x07" "columns")
QDEF(MP_QSTR_capacity, (const byte*)"\x91\xdc\x08" "capacity")
QDEF(MP_QSTR_padding, (const byte*)"\xb4\xc1\x07" "padding")
QDEF(MP_QSTR_find_barcodes, (const byte*)"\x10\x5b\x0d" "find_barcodes")
QDEF(MP_QSTR_barcode, (const byte*)"\x19\x9b\x07" "barcode")
QDEF(MP_QSTR_EAN2, (const byte*)"\x5d\x57\x04" "EAN2")
QDEF(MP_QSTR_EAN5, (const byte*)"\x5a\x57\x04" "EAN5")
QDEF(MP_QSTR_EAN8, (const byte*)"\x57\x57\x04" "EAN8")
QDEF(MP_QSTR_UPCE, (const byte*)"\x06\xe4\x04" "UPCE")
QDEF(MP_QSTR_ISBN10, (const byte*)"\x52\xc1\x06" "ISBN10")
QDEF(MP_QSTR_UPCA, (const byte*)"\x02\xe4\x04" "UPCA")
QDEF(MP_QSTR_EAN13, (const byte*)"\x2d\x43\x05" "EAN13")
QDEF(MP_QSTR_ISBN13, (const byte*)"\x51\xc1\x06" "ISBN13")
QDEF(MP_QSTR_I25, (const byte*)"\x2b\xdf\x03" "I25")
QDEF(MP_QSTR_DATABAR, (const byte*)"\x44\x49\x07" "DATABAR")
QDEF(MP_QSTR_DATABAR_EXP, (const byte*)"\xb6\xc0\x0b" "DATABAR_EXP")
QDEF(MP_QSTR_CODABAR, (const byte*)"\x1d\xab\x07" "CODABAR")
QDEF(MP_QSTR_CODE39, (const byte*)"\xc2\xe1\x06" "CODE39")
QDEF(MP_QSTR_PDF417, (const byte*)"\x45\xe0\x06" "PDF417")
QDEF(MP_QSTR_CODE93, (const byte*)"\x82\xe0\x06" "CODE93")
QDEF(MP_QSTR_CODE128, (const byte*)"\xd3\x12\x07" "CODE128")
QDEF(MP_QSTR_find_number, (const byte*)"\x1c\xab\x0b" "find_number")
QDEF(MP_QSTR_ImageWriter, (const byte*)"\x6d\xc9\x0b" "ImageWriter")
QDEF(MP_QSTR_imagewriter, (const byte*)"\x6d\x45\x0b" "imagewriter")
QDEF(MP_QSTR_ImageReader, (const byte*)"\x07\xf8\x0b" "ImageReader")
QDEF(MP_QSTR_imagereader, (const byte*)"\x07\x74\x0b" "imagereader")
QDEF(MP_QSTR_next_frame, (const byte*)"\xa0\x3d\x0a" "next_frame")
QDEF(MP_QSTR_boot_dot_py, (const byte*)"\x74\xb9\x07" "boot.py")
QDEF(MP_QSTR_main_dot_py, (const byte*)"\xa9\x9f\x07" "main.py")
QDEF(MP_QSTR__slash_flash, (const byte*)"\x1a\x4e\x06" "/flash")
QDEF(MP_QSTR__slash_flash_slash_lib, (const byte*)"\x92\x4d\x0a" "/flash/lib")
QDEF(MP_QSTR__slash_sd, (const byte*)"\xbd\x3d\x03" "/sd")
QDEF(MP_QSTR__slash_sd_slash_lib, (const byte*)"\xb5\x1e\x07" "/sd/lib")
QDEF(MP_QSTR_MSC_plus_HID, (const byte*)"\xb6\x0c\x07" "MSC+HID")
QDEF(MP_QSTR_VCP_plus_MSC, (const byte*)"\xf6\x7e\x07" "VCP+MSC")
QDEF(MP_QSTR_VCP_plus_HID, (const byte*)"\xae\x70\x07" "VCP+HID")
QDEF(MP_QSTR_CDC_plus_MSC, (const byte*)"\x17\x00\x07" "CDC+MSC")
QDEF(MP_QSTR_CDC_plus_HID, (const byte*)"\x4f\xda\x07" "CDC+HID")
QDEF(MP_QSTR_CDC, (const byte*)"\x61\xcf\x03" "CDC")
QDEF(MP_QSTR_flash, (const byte*)"\x75\x92\x05" "flash")
QDEF(MP_QSTR_A15, (const byte*)"\xc0\xbc\x03" "A15")
QDEF(MP_QSTR_A5, (const byte*)"\x51\x72\x02" "A5")
QDEF(MP_QSTR_AF1_TIM1, (const byte*)"\x6d\x8f\x08" "AF1_TIM1")
QDEF(MP_QSTR_AF1_TIM2, (const byte*)"\x6e\x8f\x08" "AF1_TIM2")
QDEF(MP_QSTR_AF2_TIM3, (const byte*)"\x8c\x5f\x08" "AF2_TIM3")
QDEF(MP_QSTR_AF2_TIM4, (const byte*)"\x8b\x5f\x08" "AF2_TIM4")
QDEF(MP_QSTR_AF3_TIM8, (const byte*)"\x26\x3f\x08" "AF3_TIM8")
QDEF(MP_QSTR_AF4_I2C2, (const byte*)"\x03\xb2\x08" "AF4_I2C2")
QDEF(MP_QSTR_AF4_USART1, (const byte*)"\xf9\xdd\x0a" "AF4_USART1")
QDEF(MP_QSTR_AF5_SPI2, (const byte*)"\x90\x1b\x08" "AF5_SPI2")
QDEF(MP_QSTR_AF7_USART3, (const byte*)"\xd8\x19\x0a" "AF7_USART3")
QDEF(MP_QSTR_AF9_TIM12, (const byte*)"\x37\x5b\x09" "AF9_TIM12")
QDEF(MP_QSTR_B10, (const byte*)"\x86\xd1\x03" "B10")
QDEF(MP_QSTR_B11, (const byte*)"\x87\xd1\x03" "B11")
QDEF(MP_QSTR_B12, (const byte*)"\x84\xd1\x03" "B12")
QDEF(MP_QSTR_B13, (const byte*)"\x85\xd1\x03" "B13")
QDEF(MP_QSTR_B14, (const byte*)"\x82\xd1\x03" "B14")
QDEF(MP_QSTR_B15, (const byte*)"\x83\xd1\x03" "B15")
QDEF(MP_QSTR_C0, (const byte*)"\x96\x72\x02" "C0")
QDEF(MP_QSTR_C1, (const byte*)"\x97\x72\x02" "C1")
QDEF(MP_QSTR_C10, (const byte*)"\x47\xc5\x03" "C10")
QDEF(MP_QSTR_C11, (const byte*)"\x46\xc5\x03" "C11")
QDEF(MP_QSTR_C12, (const byte*)"\x45\xc5\x03" "C12")
QDEF(MP_QSTR_C2, (const byte*)"\x94\x72\x02" "C2")
QDEF(MP_QSTR_C8, (const byte*)"\x9e\x72\x02" "C8")
QDEF(MP_QSTR_C9, (const byte*)"\x9f\x72\x02" "C9")
QDEF(MP_QSTR_D12, (const byte*)"\x02\xb8\x03" "D12")
QDEF(MP_QSTR_D13, (const byte*)"\x03\xb8\x03" "D13")
QDEF(MP_QSTR_D14, (const byte*)"\x04\xb8\x03" "D14")
QDEF(MP_QSTR_D2, (const byte*)"\x33\x72\x02" "D2")
QDEF(MP_QSTR_E2, (const byte*)"\xd2\x71\x02" "E2")
QDEF(MP_QSTR_LED_BLUE, (const byte*)"\x69\x98\x08" "LED_BLUE")
QDEF(MP_QSTR_LED_GREEN, (const byte*)"\x4c\x68\x09" "LED_GREEN")
QDEF(MP_QSTR_LED_IR, (const byte*)"\xec\x48\x06" "LED_IR")
QDEF(MP_QSTR_LED_RED, (const byte*)"\x84\xfd\x07" "LED_RED")
QDEF(MP_QSTR_P0, (const byte*)"\xa5\x74\x02" "P0")
QDEF(MP_QSTR_P7, (const byte*)"\xa2\x74\x02" "P7")
QDEF(MP_QSTR_P8, (const byte*)"\xad\x74\x02" "P8")
QDEF(MP_QSTR_P9, (const byte*)"\xac\x74\x02" "P9")
QDEF(MP_QSTR_PA15, (const byte*)"\x30\xfc\x04" "PA15")
QDEF(MP_QSTR_PC10, (const byte*)"\xb7\x04\x04" "PC10")
QDEF(MP_QSTR_PC11, (const byte*)"\xb6\x04\x04" "PC11")
QDEF(MP_QSTR_PC12, (const byte*)"\xb5\x04\x04" "PC12")
QDEF(MP_QSTR_PC8, (const byte*)"\xae\x0f\x03" "PC8")
QDEF(MP_QSTR_PC9, (const byte*)"\xaf\x0f\x03" "PC9")
QDEF(MP_QSTR_PD2, (const byte*)"\xc3\x0e\x03" "PD2")
QDEF(MP_QSTR_ADC, (const byte*)"\x63\xb6\x03" "ADC")
QDEF(MP_QSTR_ADC1, (const byte*)"\xf2\x82\x04" "ADC1")
QDEF(MP_QSTR_ADC2, (const byte*)"\xf1\x82\x04" "ADC2")
QDEF(MP_QSTR_ADC3, (const byte*)"\xf0\x82\x04" "ADC3")
QDEF(MP_QSTR_ADC_CR1, (const byte*)"\x3c\xf0\x07" "ADC_CR1")
QDEF(MP_QSTR_ADC_CR2, (const byte*)"\x3f\xf0\x07" "ADC_CR2")
QDEF(MP_QSTR_ADC_DR, (const byte*)"\x0a\xa1\x06" "ADC_DR")
QDEF(MP_QSTR_ADC_HTR, (const byte*)"\xd2\xb0\x07" "ADC_HTR")
QDEF(MP_QSTR_ADC_JDR1, (const byte*)"\xf1\x43\x08" "ADC_JDR1")
QDEF(MP_QSTR_ADC_JDR2, (const byte*)"\xf2\x43\x08" "ADC_JDR2")
QDEF(MP_QSTR_ADC_JDR3, (const byte*)"\xf3\x43\x08" "ADC_JDR3")
QDEF(MP_QSTR_ADC_JDR4, (const byte*)"\xf4\x43\x08" "ADC_JDR4")
QDEF(MP_QSTR_ADC_JOFR1, (const byte*)"\xdc\xdd\x09" "ADC_JOFR1")
QDEF(MP_QSTR_ADC_JOFR2, (const byte*)"\xdf\xdd\x09" "ADC_JOFR2")
QDEF(MP_QSTR_ADC_JOFR3, (const byte*)"\xde\xdd\x09" "ADC_JOFR3")
QDEF(MP_QSTR_ADC_JOFR4, (const byte*)"\xd9\xdd\x09" "ADC_JOFR4")
QDEF(MP_QSTR_ADC_JSQR, (const byte*)"\x66\x00\x08" "ADC_JSQR")
QDEF(MP_QSTR_ADC_LTR, (const byte*)"\xd6\xa0\x07" "ADC_LTR")
QDEF(MP_QSTR_ADC_SMPR1, (const byte*)"\x51\xb7\x09" "ADC_SMPR1")
QDEF(MP_QSTR_ADC_SMPR2, (const byte*)"\x52\xb7\x09" "ADC_SMPR2")
QDEF(MP_QSTR_ADC_SQR1, (const byte*)"\xdd\xbd\x08" "ADC_SQR1")
QDEF(MP_QSTR_ADC_SQR2, (const byte*)"\xde\xbd\x08" "ADC_SQR2")
QDEF(MP_QSTR_ADC_SQR3, (const byte*)"\xdf\xbd\x08" "ADC_SQR3")
QDEF(MP_QSTR_ADC_SR, (const byte*)"\x7d\xa0\x06" "ADC_SR")
QDEF(MP_QSTR_CAN1, (const byte*)"\x98\xc0\x04" "CAN1")
QDEF(MP_QSTR_CAN2, (const byte*)"\x9b\xc0\x04" "CAN2")
QDEF(MP_QSTR_CAN3, (const byte*)"\x9a\xc0\x04" "CAN3")
QDEF(MP_QSTR_CEC, (const byte*)"\x00\xcf\x03" "CEC")
QDEF(MP_QSTR_CRC, (const byte*)"\x37\xd1\x03" "CRC")
QDEF(MP_QSTR_CRC_CR, (const byte*)"\x39\x22\x06" "CRC_CR")
QDEF(MP_QSTR_CRC_DR, (const byte*)"\xde\x22\x06" "CRC_DR")
QDEF(MP_QSTR_CRC_IDR, (const byte*)"\x57\x4e\x07" "CRC_IDR")
QDEF(MP_QSTR_CRC_INIT, (const byte*)"\x92\x2f\x08" "CRC_INIT")
QDEF(MP_QSTR_CRC_POL, (const byte*)"\x7b\xaf\x07" "CRC_POL")
QDEF(MP_QSTR_DAC, (const byte*)"\x03\xba\x03" "DAC")
QDEF(MP_QSTR_DAC_CR, (const byte*)"\x8d\x81\x06" "DAC_CR")
QDEF(MP_QSTR_DAC_DHR12L1, (const byte*)"\xfc\x22\x0b" "DAC_DHR12L1")
QDEF(MP_QSTR_DAC_DHR12L2, (const byte*)"\xff\x22\x0b" "DAC_DHR12L2")
QDEF(MP_QSTR_DAC_DHR12LD, (const byte*)"\x89\x22\x0b" "DAC_DHR12LD")
QDEF(MP_QSTR_DAC_DHR12R1, (const byte*)"\xa2\x23\x0b" "DAC_DHR12R1")
QDEF(MP_QSTR_DAC_DHR12R2, (const byte*)"\xa1\x23\x0b" "DAC_DHR12R2")
QDEF(MP_QSTR_DAC_DHR12RD, (const byte*)"\xd7\x23\x0b" "DAC_DHR12RD")
QDEF(MP_QSTR_DAC_DHR8R1, (const byte*)"\x39\x97\x0a" "DAC_DHR8R1")
QDEF(MP_QSTR_DAC_DHR8R2, (const byte*)"\x3a\x97\x0a" "DAC_DHR8R2")
QDEF(MP_QSTR_DAC_DHR8RD, (const byte*)"\x4c\x97\x0a" "DAC_DHR8RD")
QDEF(MP_QSTR_DAC_DOR1, (const byte*)"\x54\x90\x08" "DAC_DOR1")
QDEF(MP_QSTR_DAC_DOR2, (const byte*)"\x57\x90\x08" "DAC_DOR2")
QDEF(MP_QSTR_DAC_SR, (const byte*)"\x9d\x7f\x06" "DAC_SR")
QDEF(MP_QSTR_DAC_SWTRIGR, (const byte*)"\x62\x88\x0b" "DAC_SWTRIGR")
QDEF(MP_QSTR_DBGMCU, (const byte*)"\x1f\x7d\x06" "DBGMCU")
QDEF(MP_QSTR_DBGMCU_APB1FZ, (const byte*)"\x7e\x4a\x0d" "DBGMCU_APB1FZ")
QDEF(MP_QSTR_DBGMCU_APB2FZ, (const byte*)"\x3d\x46\x0d" "DBGMCU_APB2FZ")
QDEF(MP_QSTR_DBGMCU_CR, (const byte*)"\x11\xd1\x09" "DBGMCU_CR")
QDEF(MP_QSTR_DBGMCU_IDCODE, (const byte*)"\xe0\x55\x0d" "DBGMCU_IDCODE")
QDEF(MP_QSTR_DCMI, (const byte*)"\xe6\x14\x04" "DCMI")
QDEF(MP_QSTR_DMA1, (const byte*)"\x1c\x2d\x04" "DMA1")
QDEF(MP_QSTR_DMA2, (const byte*)"\x1f\x2d\x04" "DMA2")
QDEF(MP_QSTR_DMA_HIFCR, (const byte*)"\x64\x8b\x09" "DMA_HIFCR")
QDEF(MP_QSTR_DMA_HISR, (const byte*)"\xd2\xf9\x08" "DMA_HISR")
QDEF(MP_QSTR_DMA_LIFCR, (const byte*)"\x60\xcb\x09" "DMA_LIFCR")
QDEF(MP_QSTR_DMA_LISR, (const byte*)"\x56\x2b\x08" "DMA_LISR")
QDEF(MP_QSTR_ETH, (const byte*)"\x7c\xa8\x03" "ETH")
QDEF(MP_QSTR_EXTI, (const byte*)"\x25\xc6\x04" "EXTI")
QDEF(MP_QSTR_EXTI_EMR, (const byte*)"\x20\xb7\x08" "EXTI_EMR")
QDEF(MP_QSTR_EXTI_FTSR, (const byte*)"\x29\xfd\x09" "EXTI_FTSR")
QDEF(MP_QSTR_EXTI_IMR, (const byte*)"\x2c\x87\x08" "EXTI_IMR")
QDEF(MP_QSTR_EXTI_PR, (const byte*)"\x98\x8e\x07" "EXTI_PR")
QDEF(MP_QSTR_EXTI_RTSR, (const byte*)"\xbd\xab\x09" "EXTI_RTSR")
QDEF(MP_QSTR_EXTI_SWIER, (const byte*)"\x80\xff\x0a" "EXTI_SWIER")
QDEF(MP_QSTR_FLASH, (const byte*)"\x95\x50\x05" "FLASH")
QDEF(MP_QSTR_FLASH_ACR, (const byte*)"\x5a\xaf\x09" "FLASH_ACR")
QDEF(MP_QSTR_FLASH_CR, (const byte*)"\x5b\xee\x08" "FLASH_CR")
QDEF(MP_QSTR_FLASH_KEYR, (const byte*)"\x6f\x49\x0a" "FLASH_KEYR")
QDEF(MP_QSTR_FLASH_OPTCR, (const byte*)"\x10\x2c\x0b" "FLASH_OPTCR")
QDEF(MP_QSTR_FLASH_OPTCR1, (const byte*)"\x21\xae\x0c" "FLASH_OPTCR1")
QDEF(MP_QSTR_FLASH_OPTKEYR, (const byte*)"\x24\xa5\x0d" "FLASH_OPTKEYR")
QDEF(MP_QSTR_FLASH_SR, (const byte*)"\x4b\xf0\x08" "FLASH_SR")
QDEF(MP_QSTR_GPIOA, (const byte*)"\xd5\xe2\x05" "GPIOA")
QDEF(MP_QSTR_GPIOB, (const byte*)"\xd6\xe2\x05" "GPIOB")
QDEF(MP_QSTR_GPIOC, (const byte*)"\xd7\xe2\x05" "GPIOC")
QDEF(MP_QSTR_GPIOD, (const byte*)"\xd0\xe2\x05" "GPIOD")
QDEF(MP_QSTR_GPIOE, (const byte*)"\xd1\xe2\x05" "GPIOE")
QDEF(MP_QSTR_GPIOF, (const byte*)"\xd2\xe2\x05" "GPIOF")
QDEF(MP_QSTR_GPIOG, (const byte*)"\xd3\xe2\x05" "GPIOG")
QDEF(MP_QSTR_GPIOH, (const byte*)"\xdc\xe2\x05" "GPIOH")
QDEF(MP_QSTR_GPIOI, (const byte*)"\xdd\xe2\x05" "GPIOI")
QDEF(MP_QSTR_GPIOJ, (const byte*)"\xde\xe2\x05" "GPIOJ")
QDEF(MP_QSTR_GPIOK, (const byte*)"\xdf\xe2\x05" "GPIOK")
QDEF(MP_QSTR_GPIO_AFR0, (const byte*)"\xce\xee\x09" "GPIO_AFR0")
QDEF(MP_QSTR_GPIO_AFR1, (const byte*)"\xcf\xee\x09" "GPIO_AFR1")
QDEF(MP_QSTR_GPIO_BSRR, (const byte*)"\x1a\xae\x09" "GPIO_BSRR")
QDEF(MP_QSTR_GPIO_IDR, (const byte*)"\xf4\xe5\x08" "GPIO_IDR")
QDEF(MP_QSTR_GPIO_LCKR, (const byte*)"\xfd\x23\x09" "GPIO_LCKR")
QDEF(MP_QSTR_GPIO_MODER, (const byte*)"\x7a\xd5\x0a" "GPIO_MODER")
QDEF(MP_QSTR_GPIO_ODR, (const byte*)"\xf2\xdc\x08" "GPIO_ODR")
QDEF(MP_QSTR_GPIO_OSPEEDR, (const byte*)"\x31\xe2\x0c" "GPIO_OSPEEDR")
QDEF(MP_QSTR_GPIO_OTYPER, (const byte*)"\xee\x2e\x0b" "GPIO_OTYPER")
QDEF(MP_QSTR_GPIO_PUPDR, (const byte*)"\x88\xf3\x0a" "GPIO_PUPDR")
QDEF(MP_QSTR_I2C1, (const byte*)"\xcc\xca\x04" "I2C1")
QDEF(MP_QSTR_I2C2, (const byte*)"\xcf\xca\x04" "I2C2")
QDEF(MP_QSTR_I2C3, (const byte*)"\xce\xca\x04" "I2C3")
QDEF(MP_QSTR_I2C4, (const byte*)"\xc9\xca\x04" "I2C4")
QDEF(MP_QSTR_I2C_CR1, (const byte*)"\xc2\x44\x07" "I2C_CR1")
QDEF(MP_QSTR_I2C_CR2, (const byte*)"\xc1\x44\x07" "I2C_CR2")
QDEF(MP_QSTR_I2C_ICR, (const byte*)"\x1a\x7d\x07" "I2C_ICR")
QDEF(MP_QSTR_I2C_ISR, (const byte*)"\x0a\x7f\x07" "I2C_ISR")
QDEF(MP_QSTR_I2C_OAR1, (const byte*)"\xaf\x31\x08" "I2C_OAR1")
QDEF(MP_QSTR_I2C_OAR2, (const byte*)"\xac\x31\x08" "I2C_OAR2")
QDEF(MP_QSTR_I2C_PECR, (const byte*)"\x06\x06\x08" "I2C_PECR")
QDEF(MP_QSTR_I2C_RXDR, (const byte*)"\x7e\xc7\x08" "I2C_RXDR")
QDEF(MP_QSTR_I2C_TIMEOUTR, (const byte*)"\x6b\xba\x0c" "I2C_TIMEOUTR")
QDEF(MP_QSTR_I2C_TIMINGR, (const byte*)"\xc0\xfc\x0b" "I2C_TIMINGR")
QDEF(MP_QSTR_I2C_TXDR, (const byte*)"\xb8\xef\x08" "I2C_TXDR")
QDEF(MP_QSTR_IWDG, (const byte*)"\xf8\x36\x04" "IWDG")
QDEF(MP_QSTR_IWDG_KR, (const byte*)"\x1e\x24\x07" "IWDG_KR")
QDEF(MP_QSTR_IWDG_PR, (const byte*)"\xe5\x25\x07" "IWDG_PR")
QDEF(MP_QSTR_IWDG_RLR, (const byte*)"\x0b\xcc\x08" "IWDG_RLR")
QDEF(MP_QSTR_IWDG_SR, (const byte*)"\x06\x25\x07" "IWDG_SR")
QDEF(MP_QSTR_IWDG_WINR, (const byte*)"\x85\xb6\x09" "IWDG_WINR")
QDEF(MP_QSTR_LPTIM1, (const byte*)"\x58\x9d\x06" "LPTIM1")
QDEF(MP_QSTR_MDIOS, (const byte*)"\xd9\x7e\x05" "MDIOS")
QDEF(MP_QSTR_PWR, (const byte*)"\x50\x0d\x03" "PWR")
QDEF(MP_QSTR_PWR_CR1, (const byte*)"\x0f\x7e\x07" "PWR_CR1")
QDEF(MP_QSTR_PWR_CR2, (const byte*)"\x0c\x7e\x07" "PWR_CR2")
QDEF(MP_QSTR_PWR_CSR1, (const byte*)"\x9c\x3f\x08" "PWR_CSR1")
QDEF(MP_QSTR_PWR_CSR2, (const byte*)"\x9f\x3f\x08" "PWR_CSR2")
QDEF(MP_QSTR_QUADSPI, (const byte*)"\x4e\x78\x07" "QUADSPI")
QDEF(MP_QSTR_RCC, (const byte*)"\x57\x07\x03" "RCC")
QDEF(MP_QSTR_RCC_AHB1ENR, (const byte*)"\x6b\x01\x0b" "RCC_AHB1ENR")
QDEF(MP_QSTR_RCC_AHB1LPENR, (const byte*)"\x77\x2b\x0d" "RCC_AHB1LPENR")
QDEF(MP_QSTR_RCC_AHB1RSTR, (const byte*)"\xf5\xda\x0c" "RCC_AHB1RSTR")
QDEF(MP_QSTR_RCC_AHB2ENR, (const byte*)"\x88\x6c\x0b" "RCC_AHB2ENR")
QDEF(MP_QSTR_RCC_AHB2LPENR, (const byte*)"\x54\xba\x0d" "RCC_AHB2LPENR")
QDEF(MP_QSTR_RCC_AHB2RSTR, (const byte*)"\x76\xea\x0c" "RCC_AHB2RSTR")
QDEF(MP_QSTR_RCC_AHB3ENR, (const byte*)"\x29\xc8\x0b" "RCC_AHB3ENR")
QDEF(MP_QSTR_RCC_AHB3LPENR, (const byte*)"\x35\x79\x0d" "RCC_AHB3LPENR")
QDEF(MP_QSTR_RCC_AHB3RSTR, (const byte*)"\x77\x89\x0c" "RCC_AHB3RSTR")
QDEF(MP_QSTR_RCC_APB1ENR, (const byte*)"\x73\x42\x0b" "RCC_APB1ENR")
QDEF(MP_QSTR_RCC_APB1LPENR, (const byte*)"\x6f\x12\x0d" "RCC_APB1LPENR")
QDEF(MP_QSTR_RCC_APB1RSTR, (const byte*)"\xed\x84\x0c" "RCC_APB1RSTR")
QDEF(MP_QSTR_RCC_APB2ENR, (const byte*)"\x90\xad\x0b" "RCC_APB2ENR")
QDEF(MP_QSTR_RCC_APB2LPENR, (const byte*)"\x4c\xa1\x0d" "RCC_APB2LPENR")
QDEF(MP_QSTR_RCC_APB2RSTR, (const byte*)"\x6e\x94\x0c" "RCC_APB2RSTR")
QDEF(MP_QSTR_RCC_BDCR, (const byte*)"\x1f\xdf\x08" "RCC_BDCR")
QDEF(MP_QSTR_RCC_CFGR, (const byte*)"\x38\x83\x08" "RCC_CFGR")
QDEF(MP_QSTR_RCC_CIR, (const byte*)"\x50\xbd\x07" "RCC_CIR")
QDEF(MP_QSTR_RCC_CR, (const byte*)"\xd9\x24\x06" "RCC_CR")
QDEF(MP_QSTR_RCC_CSR, (const byte*)"\x8a\xbf\x07" "RCC_CSR")
QDEF(MP_QSTR_RCC_DCKCFGR1, (const byte*)"\x65\x5c\x0c" "RCC_DCKCFGR1")
QDEF(MP_QSTR_RCC_DCKCFGR2, (const byte*)"\x66\x5c\x0c" "RCC_DCKCFGR2")
QDEF(MP_QSTR_RCC_PLLCFGR, (const byte*)"\x68\x4e\x0b" "RCC_PLLCFGR")
QDEF(MP_QSTR_RCC_PLLI2SCFGR, (const byte*)"\x00\xb3\x0e" "RCC_PLLI2SCFGR")
QDEF(MP_QSTR_RCC_PLLSAICFGR, (const byte*)"\xd3\xe7\x0e" "RCC_PLLSAICFGR")
QDEF(MP_QSTR_RCC_SSCGR, (const byte*)"\x7e\x06\x09" "RCC_SSCGR")
QDEF(MP_QSTR_RNG, (const byte*)"\xfe\x07\x03" "RNG")
QDEF(MP_QSTR_RNG_CR, (const byte*)"\xd0\x8c\x06" "RNG_CR")
QDEF(MP_QSTR_RNG_DR, (const byte*)"\xb7\x8c\x06" "RNG_DR")
QDEF(MP_QSTR_RNG_SR, (const byte*)"\xc0\x8e\x06" "RNG_SR")
QDEF(MP_QSTR_RTC, (const byte*)"\xa0\x04\x03" "RTC")
QDEF(MP_QSTR_RTC_ALRMAR, (const byte*)"\x7e\xcd\x0a" "RTC_ALRMAR")
QDEF(MP_QSTR_RTC_ALRMASSR, (const byte*)"\xde\x1e\x0c" "RTC_ALRMASSR")
QDEF(MP_QSTR_RTC_ALRMBR, (const byte*)"\xdd\xcd\x0a" "RTC_ALRMBR")
QDEF(MP_QSTR_RTC_ALRMBSSR, (const byte*)"\xbd\xaa\x0c" "RTC_ALRMBSSR")
QDEF(MP_QSTR_RTC_BKP0R, (const byte*)"\x84\xca\x09" "RTC_BKP0R")
QDEF(MP_QSTR_RTC_BKP10R, (const byte*)"\xf5\x23\x0a" "RTC_BKP10R")
QDEF(MP_QSTR_RTC_BKP11R, (const byte*)"\xd4\x23\x0a" "RTC_BKP11R")
QDEF(MP_QSTR_RTC_BKP12R, (const byte*)"\x37\x23\x0a" "RTC_BKP12R")
QDEF(MP_QSTR_RTC_BKP13R, (const byte*)"\x16\x23\x0a" "RTC_BKP13R")
QDEF(MP_QSTR_RTC_BKP14R, (const byte*)"\x71\x23\x0a" "RTC_BKP14R")
QDEF(MP_QSTR_RTC_BKP15R, (const byte*)"\x50\x23\x0a" "RTC_BKP15R")
QDEF(MP_QSTR_RTC_BKP16R, (const byte*)"\xb3\x22\x0a" "RTC_BKP16R")
QDEF(MP_QSTR_RTC_BKP17R, (const byte*)"\x92\x22\x0a" "RTC_BKP17R")
QDEF(MP_QSTR_RTC_BKP18R, (const byte*)"\xfd\x24\x0a" "RTC_BKP18R")
QDEF(MP_QSTR_RTC_BKP19R, (const byte*)"\xdc\x24\x0a" "RTC_BKP19R")
QDEF(MP_QSTR_RTC_BKP1R, (const byte*)"\xa5\xca\x09" "RTC_BKP1R")
QDEF(MP_QSTR_RTC_BKP20R, (const byte*)"\x76\x1f\x0a" "RTC_BKP20R")
QDEF(MP_QSTR_RTC_BKP21R, (const byte*)"\x17\x1f\x0a" "RTC_BKP21R")
QDEF(MP_QSTR_RTC_BKP22R, (const byte*)"\x34\x1f\x0a" "RTC_BKP22R")
QDEF(MP_QSTR_RTC_BKP23R, (const byte*)"\xd5\x1f\x0a" "RTC_BKP23R")
QDEF(MP_QSTR_RTC_BKP24R, (const byte*)"\xf2\x1e\x0a" "RTC_BKP24R")
QDEF(MP_QSTR_RTC_BKP25R, (const byte*)"\x93\x1e\x0a" "RTC_BKP25R")
QDEF(MP_QSTR_RTC_BKP26R, (const byte*)"\xb0\x1e\x0a" "RTC_BKP26R")
QDEF(MP_QSTR_RTC_BKP27R, (const byte*)"\x51\x1f\x0a" "RTC_BKP27R")
QDEF(MP_QSTR_RTC_BKP28R, (const byte*)"\x7e\x20\x0a" "RTC_BKP28R")
QDEF(MP_QSTR_RTC_BKP29R, (const byte*)"\x1f\x20\x0a" "RTC_BKP29R")
QDEF(MP_QSTR_RTC_BKP2R, (const byte*)"\xc6\xca\x09" "RTC_BKP2R")
QDEF(MP_QSTR_RTC_BKP30R, (const byte*)"\x77\x1b\x0a" "RTC_BKP30R")
QDEF(MP_QSTR_RTC_BKP31R, (const byte*)"\x56\x1b\x0a" "RTC_BKP31R")
QDEF(MP_QSTR_RTC_BKP3R, (const byte*)"\xe7\xca\x09" "RTC_BKP3R")
QDEF(MP_QSTR_RTC_BKP4R, (const byte*)"\x00\xca\x09" "RTC_BKP4R")
QDEF(MP_QSTR_RTC_BKP5R, (const byte*)"\x21\xca\x09" "RTC_BKP5R")
QDEF(MP_QSTR_RTC_BKP6R, (const byte*)"\x42\xca\x09" "RTC_BKP6R")
QDEF(MP_QSTR_RTC_BKP7R, (const byte*)"\x63\xca\x09" "RTC_BKP7R")
QDEF(MP_QSTR_RTC_BKP8R, (const byte*)"\x8c\xcb\x09" "RTC_BKP8R")
QDEF(MP_QSTR_RTC_BKP9R, (const byte*)"\xad\xcb\x09" "RTC_BKP9R")
QDEF(MP_QSTR_RTC_CALR, (const byte*)"\x83\x4d\x08" "RTC_CALR")
QDEF(MP_QSTR_RTC_CR, (const byte*)"\x4e\xcc\x06" "RTC_CR")
QDEF(MP_QSTR_RTC_DR, (const byte*)"\xa9\xcb\x06" "RTC_DR")
QDEF(MP_QSTR_RTC_ISR, (const byte*)"\xf7\x2b\x07" "RTC_ISR")
QDEF(MP_QSTR_RTC_OR, (const byte*)"\xc2\xca\x06" "RTC_OR")
QDEF(MP_QSTR_RTC_PRER, (const byte*)"\xca\x44\x08" "RTC_PRER")
QDEF(MP_QSTR_RTC_SHIFTR, (const byte*)"\x2d\x25\x0a" "RTC_SHIFTR")
QDEF(MP_QSTR_RTC_SSR, (const byte*)"\x6d\x16\x07" "RTC_SSR")
QDEF(MP_QSTR_RTC_TAMPCR, (const byte*)"\x26\x2d\x0a" "RTC_TAMPCR")
QDEF(MP_QSTR_RTC_TR, (const byte*)"\xb9\xc9\x06" "RTC_TR")
QDEF(MP_QSTR_RTC_TSDR, (const byte*)"\x2e\x20\x08" "RTC_TSDR")
QDEF(MP_QSTR_RTC_TSSSR, (const byte*)"\x4a\xe1\x09" "RTC_TSSSR")
QDEF(MP_QSTR_RTC_TSTR, (const byte*)"\x3e\x1e\x08" "RTC_TSTR")
QDEF(MP_QSTR_RTC_WPR, (const byte*)"\x8a\x04\x07" "RTC_WPR")
QDEF(MP_QSTR_RTC_WUTR, (const byte*)"\x1b\xaa\x08" "RTC_WUTR")
QDEF(MP_QSTR_SAI1, (const byte*)"\x6f\x87\x04" "SAI1")
QDEF(MP_QSTR_SAI2, (const byte*)"\x6c\x87\x04" "SAI2")
QDEF(MP_QSTR_SDMMC1, (const byte*)"\x00\x87\x06" "SDMMC1")
QDEF(MP_QSTR_SDMMC2, (const byte*)"\x03\x87\x06" "SDMMC2")
QDEF(MP_QSTR_SPDIFRX, (const byte*)"\x07\x3d\x07" "SPDIFRX")
QDEF(MP_QSTR_SPI1, (const byte*)"\xfe\x4f\x04" "SPI1")
QDEF(MP_QSTR_SPI2, (const byte*)"\xfd\x4f\x04" "SPI2")
QDEF(MP_QSTR_SPI3, (const byte*)"\xfc\x4f\x04" "SPI3")
QDEF(MP_QSTR_SPI4, (const byte*)"\xfb\x4f\x04" "SPI4")
QDEF(MP_QSTR_SPI5, (const byte*)"\xfa\x4f\x04" "SPI5")
QDEF(MP_QSTR_SPI6, (const byte*)"\xf9\x4f\x04" "SPI6")
QDEF(MP_QSTR_SPI_CR1, (const byte*)"\xb0\x08\x07" "SPI_CR1")
QDEF(MP_QSTR_SPI_CR2, (const byte*)"\xb3\x08\x07" "SPI_CR2")
QDEF(MP_QSTR_SPI_CRCPR, (const byte*)"\xc0\x4b\x09" "SPI_CRCPR")
QDEF(MP_QSTR_SPI_DR, (const byte*)"\x06\x7c\x06" "SPI_DR")
QDEF(MP_QSTR_SPI_I2SCFGR, (const byte*)"\x28\x2f\x0b" "SPI_I2SCFGR")
QDEF(MP_QSTR_SPI_I2SPR, (const byte*)"\x7a\x8a\x09" "SPI_I2SPR")
QDEF(MP_QSTR_SPI_RXCRCR, (const byte*)"\x1a\x5f\x0a" "SPI_RXCRCR")
QDEF(MP_QSTR_SPI_SR, (const byte*)"\x71\x7a\x06" "SPI_SR")
QDEF(MP_QSTR_SPI_TXCRCR, (const byte*)"\xdc\xb1\x0a" "SPI_TXCRCR")
QDEF(MP_QSTR_SYSCFG, (const byte*)"\xde\x81\x06" "SYSCFG")
QDEF(MP_QSTR_SYSCFG_CBR, (const byte*)"\xf2\x5d\x0a" "SYSCFG_CBR")
QDEF(MP_QSTR_SYSCFG_CMPCR, (const byte*)"\x2e\xdb\x0c" "SYSCFG_CMPCR")
QDEF(MP_QSTR_SYSCFG_EXTICR0, (const byte*)"\xe0\x6d\x0e" "SYSCFG_EXTICR0")
QDEF(MP_QSTR_SYSCFG_EXTICR1, (const byte*)"\xe1\x6d\x0e" "SYSCFG_EXTICR1")
QDEF(MP_QSTR_SYSCFG_EXTICR2, (const byte*)"\xe2\x6d\x0e" "SYSCFG_EXTICR2")
QDEF(MP_QSTR_SYSCFG_EXTICR3, (const byte*)"\xe3\x6d\x0e" "SYSCFG_EXTICR3")
QDEF(MP_QSTR_SYSCFG_MEMRMP, (const byte*)"\xab\x46\x0d" "SYSCFG_MEMRMP")
QDEF(MP_QSTR_SYSCFG_PMC, (const byte*)"\x5f\x9f\x0a" "SYSCFG_PMC")
QDEF(MP_QSTR_TIM1, (const byte*)"\x84\xe1\x04" "TIM1")
QDEF(MP_QSTR_TIM10, (const byte*)"\x34\x12\x05" "TIM10")
QDEF(MP_QSTR_TIM11, (const byte*)"\x35\x12\x05" "TIM11")
QDEF(MP_QSTR_TIM12, (const byte*)"\x36\x12\x05" "TIM12")
QDEF(MP_QSTR_TIM13, (const byte*)"\x37\x12\x05" "TIM13")
QDEF(MP_QSTR_TIM14, (const byte*)"\x30\x12\x05" "TIM14")
QDEF(MP_QSTR_TIM2, (const byte*)"\x87\xe1\x04" "TIM2")
QDEF(MP_QSTR_TIM3, (const byte*)"\x86\xe1\x04" "TIM3")
QDEF(MP_QSTR_TIM4, (const byte*)"\x81\xe1\x04" "TIM4")
QDEF(MP_QSTR_TIM5, (const byte*)"\x80\xe1\x04" "TIM5")
QDEF(MP_QSTR_TIM6, (const byte*)"\x83\xe1\x04" "TIM6")
QDEF(MP_QSTR_TIM7, (const byte*)"\x82\xe1\x04" "TIM7")
QDEF(MP_QSTR_TIM8, (const byte*)"\x8d\xe1\x04" "TIM8")
QDEF(MP_QSTR_TIM9, (const byte*)"\x8c\xe1\x04" "TIM9")
QDEF(MP_QSTR_TIM_AF1, (const byte*)"\x1c\x9e\x07" "TIM_AF1")
QDEF(MP_QSTR_TIM_AF2, (const byte*)"\x1f\x9e\x07" "TIM_AF2")
QDEF(MP_QSTR_TIM_ARR, (const byte*)"\xeb\x9f\x07" "TIM_ARR")
QDEF(MP_QSTR_TIM_BDTR, (const byte*)"\xaa\xd0\x08" "TIM_BDTR")
QDEF(MP_QSTR_TIM_CCER, (const byte*)"\x7d\x70\x08" "TIM_CCER")
QDEF(MP_QSTR_TIM_CCMR1, (const byte*)"\x24\x5e\x09" "TIM_CCMR1")
QDEF(MP_QSTR_TIM_CCMR2, (const byte*)"\x27\x5e\x09" "TIM_CCMR2")
QDEF(MP_QSTR_TIM_CCMR3, (const byte*)"\x26\x5e\x09" "TIM_CCMR3")
QDEF(MP_QSTR_TIM_CCR1, (const byte*)"\x69\x71\x08" "TIM_CCR1")
QDEF(MP_QSTR_TIM_CCR2, (const byte*)"\x6a\x71\x08" "TIM_CCR2")
QDEF(MP_QSTR_TIM_CCR3, (const byte*)"\x6b\x71\x08" "TIM_CCR3")
QDEF(MP_QSTR_TIM_CCR4, (const byte*)"\x6c\x71\x08" "TIM_CCR4")
QDEF(MP_QSTR_TIM_CCR5, (const byte*)"\x6d\x71\x08" "TIM_CCR5")
QDEF(MP_QSTR_TIM_CCR6, (const byte*)"\x6e\x71\x08" "TIM_CCR6")
QDEF(MP_QSTR_TIM_CNT, (const byte*)"\xf3\xa5\x07" "TIM_CNT")
QDEF(MP_QSTR_TIM_CR1, (const byte*)"\x0a\xa8\x07" "TIM_CR1")
QDEF(MP_QSTR_TIM_CR2, (const byte*)"\x09\xa8\x07" "TIM_CR2")
QDEF(MP_QSTR_TIM_DCR, (const byte*)"\x5f\xbb\x07" "TIM_DCR")
QDEF(MP_QSTR_TIM_DIER, (const byte*)"\x10\xfa\x08" "TIM_DIER")
QDEF(MP_QSTR_TIM_DMAR, (const byte*)"\x90\xe9\x08" "TIM_DMAR")
QDEF(MP_QSTR_TIM_EGR, (const byte*)"\x5a\xae\x07" "TIM_EGR")
QDEF(MP_QSTR_TIM_OR, (const byte*)"\x57\x0c\x06" "TIM_OR")
QDEF(MP_QSTR_TIM_PSC, (const byte*)"\x4a\xec\x07" "TIM_PSC")
QDEF(MP_QSTR_TIM_RCR, (const byte*)"\xc9\xd5\x07" "TIM_RCR")
QDEF(MP_QSTR_TIM_SMCR, (const byte*)"\xa5\x0b\x08" "TIM_SMCR")
QDEF(MP_QSTR_TIM_SR, (const byte*)"\xcb\x0e\x06" "TIM_SR")
QDEF(MP_QSTR_UART4, (const byte*)"\xa3\x50\x05" "UART4")
QDEF(MP_QSTR_UART5, (const byte*)"\xa2\x50\x05" "UART5")
QDEF(MP_QSTR_UART7, (const byte*)"\xa0\x50\x05" "UART7")
QDEF(MP_QSTR_UART8, (const byte*)"\xaf\x50\x05" "UART8")
QDEF(MP_QSTR_USART1, (const byte*)"\x35\x5b\x06" "USART1")
QDEF(MP_QSTR_USART2, (const byte*)"\x36\x5b\x06" "USART2")
QDEF(MP_QSTR_USART3, (const byte*)"\x37\x5b\x06" "USART3")
QDEF(MP_QSTR_USART6, (const byte*)"\x32\x5b\x06" "USART6")
QDEF(MP_QSTR_USART_BRR, (const byte*)"\xf9\x6f\x09" "USART_BRR")
QDEF(MP_QSTR_USART_CR1, (const byte*)"\xdb\x5a\x09" "USART_CR1")
QDEF(MP_QSTR_USART_CR2, (const byte*)"\xd8\x5a\x09" "USART_CR2")
QDEF(MP_QSTR_USART_CR3, (const byte*)"\xd9\x5a\x09" "USART_CR3")
QDEF(MP_QSTR_USART_GTPR, (const byte*)"\x2a\xda\x0a" "USART_GTPR")
QDEF(MP_QSTR_USART_ICR, (const byte*)"\xc3\x53\x09" "USART_ICR")
QDEF(MP_QSTR_USART_ISR, (const byte*)"\xd3\x51\x09" "USART_ISR")
QDEF(MP_QSTR_USART_RDR, (const byte*)"\xbf\x2d\x09" "USART_RDR")
QDEF(MP_QSTR_USART_RQR, (const byte*)"\x0a\x2f\x09" "USART_RQR")
QDEF(MP_QSTR_USART_RTOR, (const byte*)"\xa0\x25\x0a" "USART_RTOR")
QDEF(MP_QSTR_USART_TDR, (const byte*)"\xb9\x35\x09" "USART_TDR")
QDEF(MP_QSTR_WWDG, (const byte*)"\x26\x29\x04" "WWDG")
QDEF(MP_QSTR_WWDG_CFR, (const byte*)"\x4e\x8b\x08" "WWDG_CFR")
QDEF(MP_QSTR_WWDG_CR, (const byte*)"\x88\x97\x07" "WWDG_CR")
QDEF(MP_QSTR_WWDG_SR, (const byte*)"\x98\x95\x07" "WWDG_SR")
QDEF(MP_QSTR_ADCAll, (const byte*)"\x02\x28\x06" "ADCAll")
QDEF(MP_QSTR_AF_OD, (const byte*)"\x96\x2f\x05" "AF_OD")
QDEF(MP_QSTR_AF_PP, (const byte*)"\x7d\x2f\x05" "AF_PP")
QDEF(MP_QSTR_ALT, (const byte*)"\x7c\xb7\x03" "ALT")
QDEF(MP_QSTR_ALT_OPEN_DRAIN, (const byte*)"\xf8\xeb\x0e" "ALT_OPEN_DRAIN")
QDEF(MP_QSTR_BOTH, (const byte*)"\x14\x3f\x04" "BOTH")
QDEF(MP_QSTR_CAN, (const byte*)"\x89\xcf\x03" "CAN")
QDEF(MP_QSTR_CENTER, (const byte*)"\x8e\xdb\x06" "CENTER")
QDEF(MP_QSTR_CIRCULAR, (const byte*)"\xb4\x76\x08" "CIRCULAR")
QDEF(MP_QSTR_CTS, (const byte*)"\x61\xd1\x03" "CTS")
QDEF(MP_QSTR_DOWN, (const byte*)"\x37\x47\x04" "DOWN")
QDEF(MP_QSTR_ENC_A, (const byte*)"\x93\x1e\x05" "ENC_A")
QDEF(MP_QSTR_ENC_AB, (const byte*)"\xb1\xf0\x06" "ENC_AB")
QDEF(MP_QSTR_ENC_B, (const byte*)"\x90\x1e\x05" "ENC_B")
QDEF(MP_QSTR_EVT_FALLING, (const byte*)"\x3a\x5d\x0b" "EVT_FALLING")
QDEF(MP_QSTR_EVT_RISING, (const byte*)"\x55\xfe\x0a" "EVT_RISING")
QDEF(MP_QSTR_EVT_RISING_FALLING, (const byte*)"\xcd\x08\x12" "EVT_RISING_FALLING")
QDEF(MP_QSTR_ExtInt, (const byte*)"\x7f\x5c\x06" "ExtInt")
QDEF(MP_QSTR_FALLING, (const byte*)"\x02\x69\x07" "FALLING")
QDEF(MP_QSTR_False, (const byte*)"\x38\x6f\x05" "False")
QDEF(MP_QSTR_Flash, (const byte*)"\x95\x91\x05" "Flash")
QDEF(MP_QSTR_HID, (const byte*)"\x00\xec\x03" "HID")
QDEF(MP_QSTR_HIGH, (const byte*)"\x2b\x6c\x04" "HIGH")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF(MP_QSTR_IC, (const byte*)"\x2f\x73\x02" "IC")
QDEF(MP_QSTR_LED, (const byte*)"\x88\xdc\x03" "LED")
QDEF(MP_QSTR_LIST16, (const byte*)"\xc0\x28\x06" "LIST16")
QDEF(MP_QSTR_LIST32, (const byte*)"\x86\x28\x06" "LIST32")
QDEF(MP_QSTR_LOOPBACK, (const byte*)"\x12\x3d\x08" "LOOPBACK")
QDEF(MP_QSTR_LOW, (const byte*)"\x51\xdc\x03" "LOW")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\xde\x03" "LSB")
QDEF(MP_QSTR_MASK16, (const byte*)"\xb6\x9c\x06" "MASK16")
QDEF(MP_QSTR_MASK32, (const byte*)"\xf0\x9c\x06" "MASK32")
QDEF(MP_QSTR_MASTER, (const byte*)"\x39\x8d\x06" "MASTER")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\xca\x03" "MSB")
QDEF(MP_QSTR_MSC, (const byte*)"\x58\xca\x03" "MSC")
QDEF(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
QDEF(MP_QSTR_OC_ACTIVE, (const byte*)"\xfa\x02\x09" "OC_ACTIVE")
QDEF(MP_QSTR_OC_FORCED_ACTIVE, (const byte*)"\xfc\x6f\x10" "OC_FORCED_ACTIVE")
QDEF(MP_QSTR_OC_FORCED_INACTIVE, (const byte*)"\x1b\x51\x12" "OC_FORCED_INACTIVE")
QDEF(MP_QSTR_OC_INACTIVE, (const byte*)"\x1d\x9c\x0b" "OC_INACTIVE")
QDEF(MP_QSTR_OC_TIMING, (const byte*)"\xe6\x28\x09" "OC_TIMING")
QDEF(MP_QSTR_OC_TOGGLE, (const byte*)"\x64\x08\x09" "OC_TOGGLE")
QDEF(MP_QSTR_OPEN_DRAIN, (const byte*)"\x5e\x48\x0a" "OPEN_DRAIN")
QDEF(MP_QSTR_POLLERR, (const byte*)"\xdf\xc0\x07" "POLLERR")
QDEF(MP_QSTR_POLLHUP, (const byte*)"\x77\x8a\x07" "POLLHUP")
QDEF(MP_QSTR_POLLIN, (const byte*)"\x7d\x61\x06" "POLLIN")
QDEF(MP_QSTR_POLLOUT, (const byte*)"\x74\x85\x07" "POLLOUT")
QDEF(MP_QSTR_PWM, (const byte*)"\x4f\x0d\x03" "PWM")
QDEF(MP_QSTR_PWM_INVERTED, (const byte*)"\xe3\xff\x0c" "PWM_INVERTED")
QDEF(MP_QSTR_PinAF, (const byte*)"\x35\x58\x05" "PinAF")
QDEF(MP_QSTR_RISING, (const byte*)"\x2d\x0b\x06" "RISING")
QDEF(MP_QSTR_RTS, (const byte*)"\xb0\x04\x03" "RTS")
QDEF(MP_QSTR_SD, (const byte*)"\xf2\x74\x02" "SD")
QDEF(MP_QSTR_SDCard, (const byte*)"\xa6\xaf\x06" "SDCard")
QDEF(MP_QSTR_SILENT, (const byte*)"\x6c\x24\x06" "SILENT")
QDEF(MP_QSTR_SILENT_LOOPBACK, (const byte*)"\x24\x5d\x0f" "SILENT_LOOPBACK")
QDEF(MP_QSTR_SLAVE, (const byte*)"\x68\x15\x05" "SLAVE")
QDEF(MP_QSTR_SPI, (const byte*)"\xef\x11\x03" "SPI")
QDEF(MP_QSTR_Servo, (const byte*)"\x98\xd9\x05" "Servo")
QDEF(MP_QSTR_SoftSPI, (const byte*)"\x21\x58\x07" "SoftSPI")
QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF(MP_QSTR_Timer, (const byte*)"\xa2\x1f\x05" "Timer")
QDEF(MP_QSTR_TimerChannel, (const byte*)"\x41\x99\x0c" "TimerChannel")
QDEF(MP_QSTR_True, (const byte*)"\x13\x17\x04" "True")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x19\x04" "UART")
QDEF(MP_QSTR_UP, (const byte*)"\xa0\x73\x02" "UP")
QDEF(MP_QSTR_USB_HID, (const byte*)"\x5b\xb6\x07" "USB_HID")
QDEF(MP_QSTR_USB_VCP, (const byte*)"\x1b\x8a\x07" "USB_VCP")
QDEF(MP_QSTR_VCP, (const byte*)"\x40\xf6\x03" "VCP")
QDEF(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x05\x0e" "ViperTypeError")
QDEF(MP_QSTR_WDT, (const byte*)"\x62\x03\x03" "WDT")
QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF(MP_QSTR__onewire, (const byte*)"\xf7\x79\x08" "_onewire")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x7a\x04" "addr")
QDEF(MP_QSTR_addr_size, (const byte*)"\x4c\x40\x09" "addr_size")
QDEF(MP_QSTR_addrsize, (const byte*)"\x93\x91\x08" "addrsize")
QDEF(MP_QSTR_af, (const byte*)"\x22\x6e\x02" "af")
QDEF(MP_QSTR_af_list, (const byte*)"\x5f\x80\x07" "af_list")
QDEF(MP_QSTR_align, (const byte*)"\xa8\xfb\x05" "align")
QDEF(MP_QSTR_alt, (const byte*)"\x5c\x33\x03" "alt")
QDEF(MP_QSTR_and_, (const byte*)"\x91\x94\x04" "and_")
QDEF(MP_QSTR_angle, (const byte*)"\x84\x2c\x05" "angle")
QDEF(MP_QSTR_bank, (const byte*)"\x83\x44\x04" "bank")
QDEF(MP_QSTR_bl, (const byte*)"\xcb\x6e\x02" "bl")
QDEF(MP_QSTR_board, (const byte*)"\x7f\xd4\x05" "board")
QDEF(MP_QSTR_bootloader, (const byte*)"\xe2\xef\x0a" "bootloader")
QDEF(MP_QSTR_bs1, (const byte*)"\x65\x49\x03" "bs1")
QDEF(MP_QSTR_buffering, (const byte*)"\x25\xdb\x09" "buffering")
QDEF(MP_QSTR_bx, (const byte*)"\xdf\x6e\x02" "bx")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF(MP_QSTR_clz, (const byte*)"\x50\x4c\x03" "clz")
QDEF(MP_QSTR_cpsie, (const byte*)"\xe9\xc7\x05" "cpsie")
QDEF(MP_QSTR_cpu, (const byte*)"\xc3\x4d\x03" "cpu")
QDEF(MP_QSTR_crc, (const byte*)"\x17\x4d\x03" "crc")
QDEF(MP_QSTR_crc8, (const byte*)"\xcf\xef\x04" "crc8")
QDEF(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF(MP_QSTR_datetime, (const byte*)"\xe4\x04\x08" "datetime")
QDEF(MP_QSTR_deadtime, (const byte*)"\x54\xf8\x08" "deadtime")
QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x9c\x08" "encoding")
QDEF(MP_QSTR_extframe, (const byte*)"\x11\x74\x08" "extframe")
QDEF(MP_QSTR_feed, (const byte*)"\xa7\x23\x04" "feed")
QDEF(MP_QSTR_fifo, (const byte*)"\x03\x35\x04" "fifo")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x39\x08" "firstbit")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x40\x04" "flow")
QDEF(MP_QSTR_gencall, (const byte*)"\x8b\x06\x07" "gencall")
QDEF(MP_QSTR_handler, (const byte*)"\xdd\x5d\x07" "handler")
QDEF(MP_QSTR_hard, (const byte*)"\xda\x70\x04" "hard")
QDEF(MP_QSTR_have_cdc, (const byte*)"\x84\x08\x08" "have_cdc")
QDEF(MP_QSTR_hid, (const byte*)"\xe0\x4f\x03" "hid")
QDEF(MP_QSTR_hid_keyboard, (const byte*)"\x92\xb1\x0c" "hid_keyboard")
QDEF(MP_QSTR_hid_mouse, (const byte*)"\x3e\x1e\x09" "hid_mouse")
QDEF(MP_QSTR_initfilterbanks, (const byte*)"\x2a\x2b\x0f" "initfilterbanks")
QDEF(MP_QSTR_intensity, (const byte*)"\xca\x3d\x09" "intensity")
QDEF(MP_QSTR_ioctl, (const byte*)"\x78\xc2\x05" "ioctl")
QDEF(MP_QSTR_ipoll, (const byte*)"\x53\x5d\x05" "ipoll")
QDEF(MP_QSTR_irq, (const byte*)"\x8f\x56\x03" "irq")
QDEF(MP_QSTR_is_ready, (const byte*)"\x0b\x00\x08" "is_ready")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
QDEF(MP_QSTR_ldr, (const byte*)"\x5f\x40\x03" "ldr")
QDEF(MP_QSTR_ldrb, (const byte*)"\x5d\x4c\x04" "ldrb")
QDEF(MP_QSTR_ldrex, (const byte*)"\xe2\xd7\x05" "ldrex")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x46\x09" "localtime")
QDEF(MP_QSTR_lsl, (const byte*)"\xb6\x41\x03" "lsl")
QDEF(MP_QSTR_lsr, (const byte*)"\xa8\x41\x03" "lsr")
QDEF(MP_QSTR_mapper, (const byte*)"\x5e\x05\x06" "mapper")
QDEF(MP_QSTR_maxsize, (const byte*)"\xd4\x70\x07" "maxsize")
QDEF(MP_QSTR_mem16, (const byte*)"\x07\xca\x05" "mem16")
QDEF(MP_QSTR_mem32, (const byte*)"\x41\xca\x05" "mem32")
QDEF(MP_QSTR_mem8, (const byte*)"\x18\xc8\x04" "mem8")
QDEF(MP_QSTR_mem_read, (const byte*)"\x8d\xeb\x08" "mem_read")
QDEF(MP_QSTR_mem_write, (const byte*)"\x62\x8c\x09" "mem_write")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\xe8\x07" "memaddr")
QDEF(MP_QSTR_miso, (const byte*)"\x9d\x98\x04" "miso")
QDEF(MP_QSTR_mktime, (const byte*)"\x96\x2b\x06" "mktime")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x66\x06" "modify")
QDEF(MP_QSTR_mosi, (const byte*)"\x1d\xc2\x04" "mosi")
QDEF(MP_QSTR_mov, (const byte*)"\xf1\x43\x03" "mov")
QDEF(MP_QSTR_movt, (const byte*)"\x65\xc2\x04" "movt")
QDEF(MP_QSTR_movw, (const byte*)"\x66\xc2\x04" "movw")
QDEF(MP_QSTR_movwt, (const byte*)"\x52\x0f\x05" "movwt")
QDEF(MP_QSTR_mrs, (const byte*)"\x89\x45\x03" "mrs")
QDEF(MP_QSTR_names, (const byte*)"\x91\x29\x05" "names")
QDEF(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
QDEF(MP_QSTR_network, (const byte*)"\x5b\x28\x07" "network")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\xab\x08" "nodename")
QDEF(MP_QSTR_noise, (const byte*)"\x9b\xf4\x05" "noise")
QDEF(MP_QSTR_nop, (const byte*)"\xb4\x57\x03" "nop")
QDEF(MP_QSTR_nss, (const byte*)"\x2b\x5a\x03" "nss")
QDEF(MP_QSTR_onewire, (const byte*)"\x28\xfc\x07" "onewire")
QDEF(MP_QSTR_params, (const byte*)"\x79\xe2\x06" "params")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x05\x06" "parity")
QDEF(MP_QSTR_period, (const byte*)"\xa0\xa0\x06" "period")
QDEF(MP_QSTR_pid, (const byte*)"\xf8\x73\x03" "pid")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\xd9\x04" "poll")
QDEF(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF(MP_QSTR_power, (const byte*)"\xda\xed\x05" "power")
QDEF(MP_QSTR_prescaler, (const byte*)"\x28\x15\x09" "prescaler")
QDEF(MP_QSTR_present, (const byte*)"\xee\x18\x07" "present")
QDEF(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
QDEF(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
QDEF(MP_QSTR_ptr32, (const byte*)"\xb2\xca\x05" "ptr32")
QDEF(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
QDEF(MP_QSTR_pulse_width, (const byte*)"\x23\x14\x0b" "pulse_width")
QDEF(MP_QSTR_pulse_width_percent, (const byte*)"\x27\xb7\x13" "pulse_width_percent")
QDEF(MP_QSTR_pwm, (const byte*)"\x2f\x70\x03" "pwm")
QDEF(MP_QSTR_rbit, (const byte*)"\xe8\xee\x04" "rbit")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x09\x0c" "read_buf_len")
QDEF(MP_QSTR_read_channel, (const byte*)"\xcb\xb6\x0c" "read_channel")
QDEF(MP_QSTR_read_core_temp, (const byte*)"\xe0\xc2\x0e" "read_core_temp")
QDEF(MP_QSTR_read_core_vbat, (const byte*)"\xed\xb7\x0e" "read_core_vbat")
QDEF(MP_QSTR_read_core_vref, (const byte*)"\x6b\x74\x0e" "read_core_vref")
QDEF(MP_QSTR_read_timed, (const byte*)"\xf9\xfe\x0a" "read_timed")
QDEF(MP_QSTR_read_vref, (const byte*)"\x6f\x00\x09" "read_vref")
QDEF(MP_QSTR_readbit, (const byte*)"\x08\x4f\x07" "readbit")
QDEF(MP_QSTR_readblocks, (const byte*)"\x2d\x1c\x0a" "readblocks")
QDEF(MP_QSTR_readbyte, (const byte*)"\x7d\xf0\x08" "readbyte")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x92\x08" "readchar")
QDEF(MP_QSTR_readfrom, (const byte*)"\x41\xb1\x08" "readfrom")
QDEF(MP_QSTR_readfrom_into, (const byte*)"\x82\x3f\x0d" "readfrom_into")
QDEF(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x65\x0c" "readfrom_mem")
QDEF(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x8e\x11" "readfrom_mem_into")
QDEF(MP_QSTR_readonly, (const byte*)"\x03\x89\x08" "readonly")
QDEF(MP_QSTR_reg, (const byte*)"\x75\x8b\x03" "reg")
QDEF(MP_QSTR_register, (const byte*)"\xac\xa1\x08" "register")
QDEF(MP_QSTR_regs, (const byte*)"\x66\xfa\x04" "regs")
QDEF(MP_QSTR_release, (const byte*)"\xec\x8f\x07" "release")
QDEF(MP_QSTR_repl_uart, (const byte*)"\x23\x58\x09" "repl_uart")
QDEF(MP_QSTR_rng, (const byte*)"\x9e\x8b\x03" "rng")
QDEF(MP_QSTR_route, (const byte*)"\x3c\x28\x05" "route")
QDEF(MP_QSTR_rtr, (const byte*)"\x51\x89\x03" "rtr")
QDEF(MP_QSTR_rxcallback, (const byte*)"\x86\xd0\x0a" "rxcallback")
QDEF(MP_QSTR_schedule, (const byte*)"\xe0\xac\x08" "schedule")
QDEF(MP_QSTR_sck, (const byte*)"\xfe\x8f\x03" "sck")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x8f\x03" "scl")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x8f\x03" "sda")
QDEF(MP_QSTR_sdiv, (const byte*)"\xcd\x7a\x04" "sdiv") 
QDEF(MP_QSTR_send_recv, (const byte*)"\xa4\x30\x09" "send_recv")
QDEF(MP_QSTR_sendbreak, (const byte*)"\xc6\x11\x09" "sendbreak")
QDEF(MP_QSTR_servo, (const byte*)"\x78\xda\x05" "servo")
QDEF(MP_QSTR_setfilter, (const byte*)"\xc7\x1e\x09" "setfilter")
QDEF(MP_QSTR_setinterrupt, (const byte*)"\xc0\x8b\x0c" "setinterrupt")

